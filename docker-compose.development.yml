# Development Environment Configuration
# Port 3000 - Hot reload enabled

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: medcontract-dev-app
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_OPTIONS=--max-old-space-size=8192
      - NEXT_TELEMETRY_DISABLED=1
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/medcontracthub
      - NODE_ENV=development
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: npm run dev

  postgres:
    image: postgres:15-alpine
    container_name: medcontract-dev-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medcontracthub
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./supabase/schema.sql:/docker-entrypoint-initdb.d/00-schema.sql
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medcontract-dev-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  bull-board:
    image: deadly0/bull-board
    container_name: medcontract-dev-bull
    ports:
      - "3003:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - medcontract-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  medcontract-network:
    driver: bridge