{"numFailedTestSuites":8,"numFailedTests":116,"numPassedTestSuites":0,"numPassedTests":115,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":231,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749418879959,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["RLSPolicyManager","Policy Definition"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Definition should have all required policies defined","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should have all required policies defined"},{"ancestorTitles":["RLSPolicyManager","Policy Definition"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Definition should have policies for all operations on critical tables","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have policies for all operations on critical tables"},{"ancestorTitles":["RLSPolicyManager","Policy Definition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Definition should include auth.uid() in authenticated policies","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should include auth.uid() in authenticated policies"},{"ancestorTitles":["RLSPolicyManager","getPoliciesForTable"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager getPoliciesForTable should return all policies for a table","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return all policies for a table"},{"ancestorTitles":["RLSPolicyManager","getPoliciesForTable"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager getPoliciesForTable should return empty array for non-existent table","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return empty array for non-existent table"},{"ancestorTitles":["RLSPolicyManager","getPoliciesForOperation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager getPoliciesForOperation should return policies for specific operation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return policies for specific operation"},{"ancestorTitles":["RLSPolicyManager","getPoliciesForOperation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager getPoliciesForOperation should include ALL policies for any operation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include ALL policies for any operation"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should validate a correct policy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate a correct policy"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should detect missing required fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect missing required fields"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should validate SELECT policies have USING clause","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate SELECT policies have USING clause"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should validate INSERT policies have CHECK clause","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate INSERT policies have CHECK clause"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should warn about missing auth.uid() in authenticated policies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should warn about missing auth.uid() in authenticated policies"},{"ancestorTitles":["RLSPolicyManager","validatePolicy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager validatePolicy should detect SQL injection patterns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect SQL injection patterns"},{"ancestorTitles":["RLSPolicyManager","validateAllPolicies"],"duration":5,"failureDetails":[{"matcherResult":{"actual":4,"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 4","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 4\n    at Object.toBe (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/rls-policies.test.ts:207:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"RLSPolicyManager validateAllPolicies should validate all defined policies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate all defined policies"},{"ancestorTitles":["RLSPolicyManager","testAccess"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager testAccess should test user access to a resource","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should test user access to a resource"},{"ancestorTitles":["RLSPolicyManager","testAccess"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager testAccess should return false when access denied","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when access denied"},{"ancestorTitles":["RLSPolicyManager","testAccess"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager testAccess should handle missing policies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing policies"},{"ancestorTitles":["RLSPolicyManager","generatePolicySQL"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager generatePolicySQL should generate correct SQL for SELECT policy","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should generate correct SQL for SELECT policy"},{"ancestorTitles":["RLSPolicyManager","generatePolicySQL"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager generatePolicySQL should generate correct SQL for INSERT policy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should generate correct SQL for INSERT policy"},{"ancestorTitles":["RLSPolicyManager","generatePolicySQL"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager generatePolicySQL should handle policies with both USING and CHECK","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle policies with both USING and CHECK"},{"ancestorTitles":["RLSPolicyManager","generateDocumentation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager generateDocumentation should generate markdown documentation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should generate markdown documentation"},{"ancestorTitles":["RLSPolicyManager","generateDocumentation"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager generateDocumentation should include all policies in documentation","invocations":1,"location":null,"numPassingAsserts":46,"retryReasons":[],"status":"passed","title":"should include all policies in documentation"},{"ancestorTitles":["RLSPolicyManager","auditPolicies"],"duration":11,"failureDetails":[{}],"failureMessages":["TypeError: (currentPolicies || []).map is not a function\n    at RLSPolicyManager.map [as auditPolicies] (/home/locklearwyatt/projects/medcontracthub/lib/db/security/rls-policies.ts:466:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/rls-policies.test.ts:367:21)"],"fullName":"RLSPolicyManager auditPolicies should audit current vs expected policies","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should audit current vs expected policies"},{"ancestorTitles":["RLSPolicyManager","auditPolicies"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager auditPolicies should handle RPC errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle RPC errors"},{"ancestorTitles":["RLSPolicyManager","Policy Coverage"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Coverage should have complete coverage for authenticated users","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should have complete coverage for authenticated users"},{"ancestorTitles":["RLSPolicyManager","Policy Coverage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Coverage should restrict service-only operations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should restrict service-only operations"},{"ancestorTitles":["RLSPolicyManager","Policy Coverage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RLSPolicyManager Policy Coverage should enforce company isolation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should enforce company isolation"}],"endTime":1749418882267,"message":"  ● RLSPolicyManager › validateAllPolicies › should validate all defined policies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: 4\n\n      205 |\n      206 |       expect(results.valid.length).toBeGreaterThan(0)\n    > 207 |       expect(results.invalid.length).toBe(0) // All our policies should be valid\n          |                                      ^\n      208 |       \n      209 |       // Log any warnings for review\n      210 |       if (results.warnings.length > 0) {\n\n      at Object.toBe (__tests__/lib/db/security/rls-policies.test.ts:207:38)\n\n  ● RLSPolicyManager › auditPolicies › should audit current vs expected policies\n\n    TypeError: (currentPolicies || []).map is not a function\n\n      464 |\n      465 |       const implementedNames = new Set(\n    > 466 |         (currentPolicies || []).map((p: any) => p.policyname)\n          |                                 ^\n      467 |       )\n      468 |       \n      469 |       const expectedNames = new Set(\n\n      at RLSPolicyManager.map [as auditPolicies] (lib/db/security/rls-policies.ts:466:33)\n      at Object.<anonymous> (__tests__/lib/db/security/rls-policies.test.ts:367:21)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/rls-policies.test.ts","startTime":1749418881391,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["UserRepository","findByIdWithCompany"],"duration":8,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByIdWithCompany is not a function\n    at Object.findByIdWithCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:52:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository findByIdWithCompany should get user profile with company details","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get user profile with company details"},{"ancestorTitles":["UserRepository","findByIdWithCompany"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByIdWithCompany is not a function\n    at Object.findByIdWithCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:72:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository findByIdWithCompany should return null when user not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when user not found"},{"ancestorTitles":["UserRepository","findByEmail"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByEmail is not a function\n    at Object.findByEmail (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:87:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository findByEmail should find user by email address","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should find user by email address"},{"ancestorTitles":["UserRepository","findByEmail"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByEmail is not a function\n    at Object.findByEmail (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:104:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository findByEmail should normalize email to lowercase","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should normalize email to lowercase"},{"ancestorTitles":["UserRepository","findByEmail"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByEmail is not a function\n    at Object.findByEmail (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:118:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository findByEmail should return null when email not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when email not found"},{"ancestorTitles":["UserRepository","updatePreferences"],"duration":3,"failureDetails":[{"name":"NotFoundError","code":"RECORD_NOT_FOUND","statusCode":404,"timestamp":"2025-06-08T21:41:22.097Z","isOperational":true}],"failureMessages":["NotFoundError: User profile not found not found\n    at UserRepository.updatePreferences (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/user.repository.ts:268:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:156:22)"],"fullName":"UserRepository updatePreferences should update user preferences","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update user preferences"},{"ancestorTitles":["UserRepository","updatePreferences"],"duration":41,"failureDetails":[],"failureMessages":[],"fullName":"UserRepository updatePreferences should merge preferences with existing ones","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should merge preferences with existing ones"},{"ancestorTitles":["UserRepository","updatePreferences"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"UserRepository updatePreferences should handle missing preferences gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing preferences gracefully"},{"ancestorTitles":["UserRepository","updateOnboardingStatus"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateOnboardingStatus is not a function\n    at Object.updateOnboardingStatus (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:245:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository updateOnboardingStatus should mark onboarding as completed","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should mark onboarding as completed"},{"ancestorTitles":["UserRepository","updateOnboardingStatus"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateOnboardingStatus is not a function\n    at Object.updateOnboardingStatus (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:272:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository updateOnboardingStatus should clear completion timestamp when reverting","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should clear completion timestamp when reverting"},{"ancestorTitles":["UserRepository","updateLastActivity"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateLastActivity is not a function\n    at Object.updateLastActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:297:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository updateLastActivity should update last activity timestamp","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update last activity timestamp"},{"ancestorTitles":["UserRepository","updateLastActivity"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateLastActivity is not a function\n    at Object.updateLastActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:316:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository updateLastActivity should not throw on update failure","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not throw on update failure"},{"ancestorTitles":["UserRepository","searchByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.searchByCompany is not a function\n    at Object.searchByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:332:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository searchByCompany should search users within company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should search users within company"},{"ancestorTitles":["UserRepository","searchByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.searchByCompany is not a function\n    at Object.searchByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:354:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository searchByCompany should filter by role","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter by role"},{"ancestorTitles":["UserRepository","searchByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.searchByCompany is not a function\n    at Object.searchByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:373:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository searchByCompany should filter by department","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter by department"},{"ancestorTitles":["UserRepository","searchByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.searchByCompany is not a function\n    at Object.searchByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:392:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository searchByCompany should filter by active status","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter by active status"},{"ancestorTitles":["UserRepository","searchByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.searchByCompany is not a function\n    at Object.searchByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:411:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository searchByCompany should order results by name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should order results by name"},{"ancestorTitles":["UserRepository","getActivity"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getActivity is not a function\n    at Object.getActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:465:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository getActivity should get user activity summary","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get user activity summary"},{"ancestorTitles":["UserRepository","getActivity"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getActivity is not a function\n    at Object.getActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:491:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository getActivity should handle missing activity data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle missing activity data"},{"ancestorTitles":["UserRepository","createInitialProfile"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.createInitialProfile is not a function\n    at Object.createInitialProfile (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:529:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository createInitialProfile should create profile for new user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create profile for new user"},{"ancestorTitles":["UserRepository","createInitialProfile"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.createInitialProfile is not a function\n    at Object.createInitialProfile (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:552:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository createInitialProfile should handle profile already exists","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle profile already exists"},{"ancestorTitles":["UserRepository","bulkUpdateLastActivity"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: repository.bulkUpdateLastActivity is not a function\n    at Object.bulkUpdateLastActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:578:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository bulkUpdateLastActivity should update multiple users activity timestamps","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update multiple users activity timestamps"},{"ancestorTitles":["UserRepository","bulkUpdateLastActivity"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.bulkUpdateLastActivity is not a function\n    at Object.bulkUpdateLastActivity (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:590:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository bulkUpdateLastActivity should handle empty array","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty array"},{"ancestorTitles":["UserRepository","getTeamMembers"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getTeamMembers is not a function\n    at Object.getTeamMembers (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:629:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository getTeamMembers should get all users in same company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get all users in same company"},{"ancestorTitles":["UserRepository","getTeamMembers"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getTeamMembers is not a function\n    at Object.getTeamMembers (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:639:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository getTeamMembers should exclude users without company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should exclude users without company"},{"ancestorTitles":["UserRepository","Error Handling"],"duration":2,"failureDetails":[{"name":"DatabaseError","code":"PGRST116","statusCode":500,"details":{"operation":"findById","table":"profiles","id":"non-existent"},"timestamp":"2025-06-08T21:41:22.199Z","isOperational":true}],"failureMessages":["DatabaseError: The result contains 0 rows\n    at UserRepository.handleError (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:468:18)\n    at UserRepository.handleError [as findById] (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:86:18)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:654:22)"],"fullName":"UserRepository Error Handling should handle profile not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle profile not found"},{"ancestorTitles":["UserRepository","Error Handling"],"duration":30,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at UserRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at UserRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:666:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at UserRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at UserRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:666:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at UserRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at UserRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:666:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:667:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository Error Handling should handle database errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle database errors gracefully"},{"ancestorTitles":["UserRepository","Error Handling"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByEmail is not a function\n    at Object.findByEmail (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts:671:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"UserRepository Error Handling should validate email format","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate email format"}],"endTime":1749418882290,"message":"  ● UserRepository › findByIdWithCompany › should get user profile with company details\n\n    TypeError: repository.findByIdWithCompany is not a function\n\n      50 |       repository = new UserRepository(mockSupabase)\n      51 |\n    > 52 |       const result = await repository.findByIdWithCompany('user-1')\n         |                                       ^\n      53 |\n      54 |       expect(result).toBeTruthy()\n      55 |       expect(result?.id).toBe('user-1')\n\n      at Object.findByIdWithCompany (__tests__/lib/db/repositories/user.repository.test.ts:52:39)\n\n  ● UserRepository › findByIdWithCompany › should return null when user not found\n\n    TypeError: repository.findByIdWithCompany is not a function\n\n      70 |       repository = new UserRepository(mockSupabase)\n      71 |\n    > 72 |       const result = await repository.findByIdWithCompany('non-existent')\n         |                                       ^\n      73 |\n      74 |       expect(result).toBeNull()\n      75 |     })\n\n      at Object.findByIdWithCompany (__tests__/lib/db/repositories/user.repository.test.ts:72:39)\n\n  ● UserRepository › findByEmail › should find user by email address\n\n    TypeError: repository.findByEmail is not a function\n\n      85 |       repository = new UserRepository(mockSupabase)\n      86 |\n    > 87 |       const result = await repository.findByEmail('john.doe@medtechsolutions.com')\n         |                                       ^\n      88 |\n      89 |       expect(result).toBeTruthy()\n      90 |       expect(result?.email).toBe('john.doe@medtechsolutions.com')\n\n      at Object.findByEmail (__tests__/lib/db/repositories/user.repository.test.ts:87:39)\n\n  ● UserRepository › findByEmail › should normalize email to lowercase\n\n    TypeError: repository.findByEmail is not a function\n\n      102 |       repository = new UserRepository(mockSupabase)\n      103 |\n    > 104 |       await repository.findByEmail('John.Doe@MedTechSolutions.COM')\n          |                        ^\n      105 |\n      106 |       const query = mockSupabase.from.mock.results[0]?.value\n      107 |       expect(query.eq).toHaveBeenCalledWith('email', 'john.doe@medtechsolutions.com')\n\n      at Object.findByEmail (__tests__/lib/db/repositories/user.repository.test.ts:104:24)\n\n  ● UserRepository › findByEmail › should return null when email not found\n\n    TypeError: repository.findByEmail is not a function\n\n      116 |       repository = new UserRepository(mockSupabase)\n      117 |\n    > 118 |       const result = await repository.findByEmail('nonexistent@example.com')\n          |                                       ^\n      119 |\n      120 |       expect(result).toBeNull()\n      121 |     })\n\n      at Object.findByEmail (__tests__/lib/db/repositories/user.repository.test.ts:118:39)\n\n  ● UserRepository › updatePreferences › should update user preferences\n\n    NotFoundError: User profile not found not found\n\n      266 |       const currentProfile = await this.findById(userId)\n      267 |       if (!currentProfile) {\n    > 268 |         throw new NotFoundError('User profile not found')\n          |               ^\n      269 |       }\n      270 |\n      271 |       const currentPrefs = currentProfile.preferences \n\n      at UserRepository.updatePreferences (lib/db/repositories/user.repository.ts:268:15)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:156:22)\n\n  ● UserRepository › updateOnboardingStatus › should mark onboarding as completed\n\n    TypeError: repository.updateOnboardingStatus is not a function\n\n      243 |       repository = new UserRepository(mockSupabase)\n      244 |\n    > 245 |       const result = await repository.updateOnboardingStatus('user-1', true)\n          |                                       ^\n      246 |\n      247 |       expect(result.onboarding_completed).toBe(true)\n      248 |       expect(result.onboarding_completed_at).toBe(now.toISOString())\n\n      at Object.updateOnboardingStatus (__tests__/lib/db/repositories/user.repository.test.ts:245:39)\n\n  ● UserRepository › updateOnboardingStatus › should clear completion timestamp when reverting\n\n    TypeError: repository.updateOnboardingStatus is not a function\n\n      270 |       repository = new UserRepository(mockSupabase)\n      271 |\n    > 272 |       const result = await repository.updateOnboardingStatus('user-1', false)\n          |                                       ^\n      273 |\n      274 |       expect(result.onboarding_completed).toBe(false)\n      275 |       expect(result.onboarding_completed_at).toBeNull()\n\n      at Object.updateOnboardingStatus (__tests__/lib/db/repositories/user.repository.test.ts:272:39)\n\n  ● UserRepository › updateLastActivity › should update last activity timestamp\n\n    TypeError: repository.updateLastActivity is not a function\n\n      295 |       repository = new UserRepository(mockSupabase)\n      296 |\n    > 297 |       const result = await repository.updateLastActivity('user-1')\n          |                                       ^\n      298 |\n      299 |       expect(result.last_activity_at).toBe(now.toISOString())\n      300 |       \n\n      at Object.updateLastActivity (__tests__/lib/db/repositories/user.repository.test.ts:297:39)\n\n  ● UserRepository › updateLastActivity › should not throw on update failure\n\n    TypeError: repository.updateLastActivity is not a function\n\n      314 |\n      315 |       // Should not throw - activity updates are non-critical\n    > 316 |       await expect(repository.updateLastActivity('user-1'))\n          |                               ^\n      317 |         .resolves.not.toThrow()\n      318 |     })\n      319 |   })\n\n      at Object.updateLastActivity (__tests__/lib/db/repositories/user.repository.test.ts:316:31)\n\n  ● UserRepository › searchByCompany › should search users within company\n\n    TypeError: repository.searchByCompany is not a function\n\n      330 |       repository = new UserRepository(mockSupabase)\n      331 |\n    > 332 |       const result = await repository.searchByCompany('company-1', {\n          |                                       ^\n      333 |         query: 'john'\n      334 |       })\n      335 |\n\n      at Object.searchByCompany (__tests__/lib/db/repositories/user.repository.test.ts:332:39)\n\n  ● UserRepository › searchByCompany › should filter by role\n\n    TypeError: repository.searchByCompany is not a function\n\n      352 |       repository = new UserRepository(mockSupabase)\n      353 |\n    > 354 |       const result = await repository.searchByCompany('company-1', {\n          |                                       ^\n      355 |         role: 'owner'\n      356 |       })\n      357 |\n\n      at Object.searchByCompany (__tests__/lib/db/repositories/user.repository.test.ts:354:39)\n\n  ● UserRepository › searchByCompany › should filter by department\n\n    TypeError: repository.searchByCompany is not a function\n\n      371 |       repository = new UserRepository(mockSupabase)\n      372 |\n    > 373 |       await repository.searchByCompany('company-1', {\n          |                        ^\n      374 |         department: 'Sales'\n      375 |       })\n      376 |\n\n      at Object.searchByCompany (__tests__/lib/db/repositories/user.repository.test.ts:373:24)\n\n  ● UserRepository › searchByCompany › should filter by active status\n\n    TypeError: repository.searchByCompany is not a function\n\n      390 |       repository = new UserRepository(mockSupabase)\n      391 |\n    > 392 |       await repository.searchByCompany('company-1', {\n          |                        ^\n      393 |         onlyActive: true\n      394 |       })\n      395 |\n\n      at Object.searchByCompany (__tests__/lib/db/repositories/user.repository.test.ts:392:24)\n\n  ● UserRepository › searchByCompany › should order results by name\n\n    TypeError: repository.searchByCompany is not a function\n\n      409 |       repository = new UserRepository(mockSupabase)\n      410 |\n    > 411 |       await repository.searchByCompany('company-1')\n          |                        ^\n      412 |\n      413 |       const query = mockSupabase.from.mock.results[0]?.value\n      414 |       expect(query.order).toHaveBeenCalledWith('full_name', { ascending: true })\n\n      at Object.searchByCompany (__tests__/lib/db/repositories/user.repository.test.ts:411:24)\n\n  ● UserRepository › getActivity › should get user activity summary\n\n    TypeError: repository.getActivity is not a function\n\n      463 |\n      464 |       repository = new UserRepository(mockSupabase)\n    > 465 |       const result = await repository.getActivity(userId)\n          |                                       ^\n      466 |\n      467 |       expect(result).toEqual({\n      468 |         savedOpportunities: 15,\n\n      at Object.getActivity (__tests__/lib/db/repositories/user.repository.test.ts:465:39)\n\n  ● UserRepository › getActivity › should handle missing activity data\n\n    TypeError: repository.getActivity is not a function\n\n      489 |\n      490 |       repository = new UserRepository(mockSupabase)\n    > 491 |       const result = await repository.getActivity('user-1')\n          |                                       ^\n      492 |\n      493 |       expect(result.savedOpportunities).toBe(0)\n      494 |       expect(result.proposalsCreated).toBe(0)\n\n      at Object.getActivity (__tests__/lib/db/repositories/user.repository.test.ts:491:39)\n\n  ● UserRepository › createInitialProfile › should create profile for new user\n\n    TypeError: repository.createInitialProfile is not a function\n\n      527 |       repository = new UserRepository(mockSupabase)\n      528 |\n    > 529 |       const result = await repository.createInitialProfile(authUser, profileData)\n          |                                       ^\n      530 |\n      531 |       expect(result.id).toBe(authUser.id)\n      532 |       expect(result.email).toBe(authUser.email)\n\n      at Object.createInitialProfile (__tests__/lib/db/repositories/user.repository.test.ts:529:39)\n\n  ● UserRepository › createInitialProfile › should handle profile already exists\n\n    TypeError: repository.createInitialProfile is not a function\n\n      550 |       repository = new UserRepository(mockSupabase)\n      551 |\n    > 552 |       await expect(repository.createInitialProfile(\n          |                               ^\n      553 |         { id: 'existing-id', email: 'existing@example.com' },\n      554 |         { full_name: 'Existing User' }\n      555 |       )).rejects.toThrow('already exists')\n\n      at Object.createInitialProfile (__tests__/lib/db/repositories/user.repository.test.ts:552:31)\n\n  ● UserRepository › bulkUpdateLastActivity › should update multiple users activity timestamps\n\n    TypeError: repository.bulkUpdateLastActivity is not a function\n\n      576 |       repository = new UserRepository(mockSupabase)\n      577 |\n    > 578 |       const result = await repository.bulkUpdateLastActivity(userIds)\n          |                                       ^\n      579 |\n      580 |       expect(result).toBe(3)\n      581 |       \n\n      at Object.bulkUpdateLastActivity (__tests__/lib/db/repositories/user.repository.test.ts:578:39)\n\n  ● UserRepository › bulkUpdateLastActivity › should handle empty array\n\n    TypeError: repository.bulkUpdateLastActivity is not a function\n\n      588 |\n      589 |     it('should handle empty array', async () => {\n    > 590 |       const result = await repository.bulkUpdateLastActivity([])\n          |                                       ^\n      591 |       expect(result).toBe(0)\n      592 |       expect(mockSupabase.from).not.toHaveBeenCalled()\n      593 |     })\n\n      at Object.bulkUpdateLastActivity (__tests__/lib/db/repositories/user.repository.test.ts:590:39)\n\n  ● UserRepository › getTeamMembers › should get all users in same company\n\n    TypeError: repository.getTeamMembers is not a function\n\n      627 |         .mockResolvedValueOnce(teamMembers)\n      628 |\n    > 629 |       const result = await repository.getTeamMembers('user-1')\n          |                                       ^\n      630 |\n      631 |       expect(result).toHaveLength(2)\n      632 |       expect(result.every(m => m.company_id === 'company-1')).toBe(true)\n\n      at Object.getTeamMembers (__tests__/lib/db/repositories/user.repository.test.ts:629:39)\n\n  ● UserRepository › getTeamMembers › should exclude users without company\n\n    TypeError: repository.getTeamMembers is not a function\n\n      637 |         .mockResolvedValueOnce({ company_id: null })\n      638 |\n    > 639 |       const result = await repository.getTeamMembers('user-1')\n          |                                       ^\n      640 |\n      641 |       expect(result).toEqual([])\n      642 |     })\n\n      at Object.getTeamMembers (__tests__/lib/db/repositories/user.repository.test.ts:639:39)\n\n  ● UserRepository › Error Handling › should handle profile not found\n\n    DatabaseError: The result contains 0 rows\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at UserRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at UserRepository.handleError [as findById] (lib/db/repositories/base.repository.ts:86:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:654:22)\n\n  ● UserRepository › Error Handling › should handle database errors gracefully\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Database operation failed\"\n    Received message:   \"An unexpected database error occurred\"\n\n          474 |     }\n          475 |\n        > 476 |     return new DatabaseError(\n              |            ^\n          477 |       'An unexpected database error occurred',\n          478 |       'UNKNOWN',\n          479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at UserRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at UserRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/user.repository.test.ts:666:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/user.repository.test.ts:667:18)\n\n  ● UserRepository › Error Handling › should validate email format\n\n    TypeError: repository.findByEmail is not a function\n\n      669 |\n      670 |     it('should validate email format', async () => {\n    > 671 |       await expect(repository.findByEmail('invalid-email'))\n          |                               ^\n      672 |         .rejects.toThrow('Invalid email format')\n      673 |     })\n      674 |   })\n\n      at Object.findByEmail (__tests__/lib/db/repositories/user.repository.test.ts:671:31)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/user.repository.test.ts","startTime":1749418881319,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ProposalRepository","findByIdWithDetails"],"duration":12,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at id (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/proposal.repository.ts:272:37)\n    at Array.map (<anonymous>)\n    at ProposalRepository.map [as findByIdWithDetails] (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/proposal.repository.ts:271:61)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:74:22)"],"fullName":"ProposalRepository findByIdWithDetails should get proposal with all related data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get proposal with all related data"},{"ancestorTitles":["ProposalRepository","findByIdWithDetails"],"duration":7,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"proposal_sections!inner(display_order)\"\nReceived string:    \"\n    *,\n    opportunities!proposals_opportunity_id_fkey(\n      id,\n      title,\n      agency,\n      response_deadline,\n      solicitation_number\n    ),\n    proposal_sections(\n      id,\n      section_type,\n      title,\n      content,\n      display_order,\n      is_required,\n      max_pages,\n      created_at,\n      updated_at\n    ),\n    proposal_attachments(\n      id,\n      file_name,\n      file_type,\n      file_size,\n      file_url,\n      description,\n      uploaded_at\n    ),\n    proposal_documents!proposal_documents_proposal_id_fkey(\n      id,\n      document_id,\n      contract_documents!inner(\n        id,\n        document_name,\n        document_type,\n        processed,\n        extracted_text\n      )\n    )\n  \"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"proposal_sections!inner(display_order)\"\nReceived string:    \"\n    *,\n    opportunities!proposals_opportunity_id_fkey(\n      id,\n      title,\n      agency,\n      response_deadline,\n      solicitation_number\n    ),\n    proposal_sections(\n      id,\n      section_type,\n      title,\n      content,\n      display_order,\n      is_required,\n      max_pages,\n      created_at,\n      updated_at\n    ),\n    proposal_attachments(\n      id,\n      file_name,\n      file_type,\n      file_size,\n      file_url,\n      description,\n      uploaded_at\n    ),\n    proposal_documents!proposal_documents_proposal_id_fkey(\n      id,\n      document_id,\n      contract_documents!inner(\n        id,\n        document_name,\n        document_type,\n        processed,\n        extracted_text\n      )\n    )\n  \"\n    at Object.toContain (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:102:26)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ProposalRepository findByIdWithDetails should order sections by display_order","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should order sections by display_order"},{"ancestorTitles":["ProposalRepository","findByCompany"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByCompany is not a function\n    at Object.findByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:119:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository findByCompany should get proposals for company with pagination","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get proposals for company with pagination"},{"ancestorTitles":["ProposalRepository","findByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByCompany is not a function\n    at Object.findByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:141:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository findByCompany should filter by multiple statuses","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter by multiple statuses"},{"ancestorTitles":["ProposalRepository","findByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByCompany is not a function\n    at Object.findByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:157:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository findByCompany should order by deadline","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should order by deadline"},{"ancestorTitles":["ProposalRepository","createWithSections"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.createWithSections is not a function\n    at Object.createWithSections (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:213:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository createWithSections should create proposal with sections in transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create proposal with sections in transaction"},{"ancestorTitles":["ProposalRepository","createWithSections"],"duration":3,"failureDetails":[{}],"failureMessages":["TypeError: repository.createWithSections is not a function\n    at Object.createWithSections (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:240:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository createWithSections should validate proposal data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate proposal data"},{"ancestorTitles":["ProposalRepository","updateSection"],"duration":3,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateSection is not a function\n    at Object.updateSection (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:262:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository updateSection should update proposal section","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update proposal section"},{"ancestorTitles":["ProposalRepository","updateSection"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateSection is not a function\n    at Object.updateSection (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:282:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository updateSection should validate section data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate section data"},{"ancestorTitles":["ProposalRepository","reorderSections"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.reorderSections is not a function\n    at Object.reorderSections (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:314:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository reorderSections should update section display orders","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update section display orders"},{"ancestorTitles":["ProposalRepository","reorderSections"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: repository.reorderSections is not a function\n    at Object.reorderSections (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:327:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository reorderSections should handle reorder errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle reorder errors"},{"ancestorTitles":["ProposalRepository","updateStatus"],"duration":50,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n-   \"actual_submission_date\": \"2025-06-08T21:41:22.205Z\",\n    \"status\": \"submitted\",\n  },\n\nNumber of calls: 1","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n-   \"actual_submission_date\": \"2025-06-08T21:41:22.205Z\",\n    \"status\": \"submitted\",\n  },\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:358:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ProposalRepository updateStatus should update proposal status with timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should update proposal status with timestamp"},{"ancestorTitles":["ProposalRepository","updateStatus"],"duration":4,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n-   \"actual_submission_date\": null,\n    \"status\": \"draft\",\n  },\n\nNumber of calls: 1","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n- Expected\n+ Received\n\n  Object {\n-   \"actual_submission_date\": null,\n    \"status\": \"draft\",\n  },\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:382:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ProposalRepository updateStatus should clear submission date when reverting to draft","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should clear submission date when reverting to draft"},{"ancestorTitles":["ProposalRepository","updateStatus"],"duration":3,"failureDetails":[{"message":"expect(received).rejects.toThrow()\n\nReceived promise resolved instead of rejected\nResolved to value: null"}],"failureMessages":["Error: expect(received).rejects.toThrow()\n\nReceived promise resolved instead of rejected\nResolved to value: null\n    at expect (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:113:15)\n    at Object.expect (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:395:13)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository updateStatus should validate status transitions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate status transitions"},{"ancestorTitles":["ProposalRepository","getStatisticsByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getStatisticsByCompany is not a function\n    at Object.getStatisticsByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:429:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository getStatisticsByCompany should calculate proposal statistics","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate proposal statistics"},{"ancestorTitles":["ProposalRepository","getStatisticsByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getStatisticsByCompany is not a function\n    at Object.getStatisticsByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:482:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository getStatisticsByCompany should calculate average time to submit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate average time to submit"},{"ancestorTitles":["ProposalRepository","getStatisticsByCompany"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getStatisticsByCompany is not a function\n    at Object.getStatisticsByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:509:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository getStatisticsByCompany should calculate average proposal value","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate average proposal value"},{"ancestorTitles":["ProposalRepository","findExpiringProposals"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findExpiringProposals is not a function\n    at Object.findExpiringProposals (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:528:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository findExpiringProposals should find proposals with upcoming deadlines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should find proposals with upcoming deadlines"},{"ancestorTitles":["ProposalRepository","findExpiringProposals"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findExpiringProposals is not a function\n    at Object.findExpiringProposals (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:547:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository findExpiringProposals should include company filter if provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should include company filter if provided"},{"ancestorTitles":["ProposalRepository","duplicateProposal"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.duplicateProposal is not a function\n    at Object.duplicateProposal (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:578:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository duplicateProposal should create a copy of proposal with sections","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create a copy of proposal with sections"},{"ancestorTitles":["ProposalRepository","duplicateProposal"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.duplicateProposal is not a function\n    at Object.duplicateProposal (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:604:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository duplicateProposal should reset status and dates for duplicate","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reset status and dates for duplicate"},{"ancestorTitles":["ProposalRepository","Performance"],"duration":3,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByCompany is not a function\n    at Object.findByCompany (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:638:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository Performance should handle bulk operations efficiently","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle bulk operations efficiently"},{"ancestorTitles":["ProposalRepository","Error Handling"],"duration":2,"failureDetails":[{"name":"DatabaseError","code":"PGRST116","statusCode":500,"details":{"operation":"findById","table":"proposals","id":"non-existent"},"timestamp":"2025-06-08T21:41:22.291Z","isOperational":true}],"failureMessages":["DatabaseError: The result contains 0 rows\n    at ProposalRepository.handleError (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:468:18)\n    at ProposalRepository.handleError [as findById] (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:86:18)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:660:22)"],"fullName":"ProposalRepository Error Handling should handle proposal not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle proposal not found"},{"ancestorTitles":["ProposalRepository","Error Handling"],"duration":27,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at ProposalRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:673:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at ProposalRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:673:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at ProposalRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:673:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:674:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository Error Handling should handle validation errors from validator","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle validation errors from validator"},{"ancestorTitles":["ProposalRepository","Error Handling"],"duration":5,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"could not serialize access due to concurrent update\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at ProposalRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:688:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"could not serialize access due to concurrent update\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at ProposalRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:688:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"could not serialize access due to concurrent update\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at ProposalRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:688:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts:689:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ProposalRepository Error Handling should handle concurrent modification errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle concurrent modification errors"}],"endTime":1749418882378,"message":"  ● ProposalRepository › findByIdWithDetails › should get proposal with all related data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      270 |         attachments: (data as any).proposal_attachments || [],\n      271 |         documents: ((data as any).proposal_documents || []).map((pd: any) => ({\n    > 272 |           id: pd.contract_documents.id,\n          |                                     ^\n      273 |           document_name: pd.contract_documents.document_name,\n      274 |           document_type: pd.contract_documents.document_type,\n      275 |           processed: pd.contract_documents.processed,\n\n      at id (lib/db/repositories/proposal.repository.ts:272:37)\n          at Array.map (<anonymous>)\n      at ProposalRepository.map [as findByIdWithDetails] (lib/db/repositories/proposal.repository.ts:271:61)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:74:22)\n\n  ● ProposalRepository › findByIdWithDetails › should order sections by display_order\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"proposal_sections!inner(display_order)\"\n    Received string:    \"\n        *,\n        opportunities!proposals_opportunity_id_fkey(\n          id,\n          title,\n          agency,\n          response_deadline,\n          solicitation_number\n        ),\n        proposal_sections(\n          id,\n          section_type,\n          title,\n          content,\n          display_order,\n          is_required,\n          max_pages,\n          created_at,\n          updated_at\n        ),\n        proposal_attachments(\n          id,\n          file_name,\n          file_type,\n          file_size,\n          file_url,\n          description,\n          uploaded_at\n        ),\n        proposal_documents!proposal_documents_proposal_id_fkey(\n          id,\n          document_id,\n          contract_documents!inner(\n            id,\n            document_name,\n            document_type,\n            processed,\n            extracted_text\n          )\n        )\n      \"\n\n      100 |       const query = mockSupabase.from.mock.results[0]?.value\n      101 |       const selectCall = query.select.mock.calls[0][0]\n    > 102 |       expect(selectCall).toContain('proposal_sections!inner(display_order)')\n          |                          ^\n      103 |     })\n      104 |   })\n      105 |\n\n      at Object.toContain (__tests__/lib/db/repositories/proposal.repository.test.ts:102:26)\n\n  ● ProposalRepository › findByCompany › should get proposals for company with pagination\n\n    TypeError: repository.findByCompany is not a function\n\n      117 |       repository = new ProposalRepository(mockSupabase)\n      118 |\n    > 119 |       const result = await repository.findByCompany('company-1', {\n          |                                       ^\n      120 |         page: 1,\n      121 |         pageSize: 10,\n      122 |         status: 'draft'\n\n      at Object.findByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:119:39)\n\n  ● ProposalRepository › findByCompany › should filter by multiple statuses\n\n    TypeError: repository.findByCompany is not a function\n\n      139 |       repository = new ProposalRepository(mockSupabase)\n      140 |\n    > 141 |       await repository.findByCompany('company-1', {\n          |                        ^\n      142 |         statuses: ['draft', 'submitted']\n      143 |       })\n      144 |\n\n      at Object.findByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:141:24)\n\n  ● ProposalRepository › findByCompany › should order by deadline\n\n    TypeError: repository.findByCompany is not a function\n\n      155 |       repository = new ProposalRepository(mockSupabase)\n      156 |\n    > 157 |       await repository.findByCompany('company-1', {\n          |                        ^\n      158 |         orderBy: 'deadline'\n      159 |       })\n      160 |\n\n      at Object.findByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:157:24)\n\n  ● ProposalRepository › createWithSections › should create proposal with sections in transaction\n\n    TypeError: repository.createWithSections is not a function\n\n      211 |       repository = new ProposalRepository(mockSupabase)\n      212 |\n    > 213 |       const result = await repository.createWithSections(newProposal, sections)\n          |                                       ^\n      214 |\n      215 |       expect(result.id).toBe('new-proposal-id')\n      216 |       expect(mockSupabase.from).toHaveBeenCalledTimes(2)\n\n      at Object.createWithSections (__tests__/lib/db/repositories/proposal.repository.test.ts:213:39)\n\n  ● ProposalRepository › createWithSections › should validate proposal data\n\n    TypeError: repository.createWithSections is not a function\n\n      238 |       )\n      239 |\n    > 240 |       await expect(repository.createWithSections({} as any, []))\n          |                               ^\n      241 |         .rejects.toThrow(ValidationError)\n      242 |     })\n      243 |   })\n\n      at Object.createWithSections (__tests__/lib/db/repositories/proposal.repository.test.ts:240:31)\n\n  ● ProposalRepository › updateSection › should update proposal section\n\n    TypeError: repository.updateSection is not a function\n\n      260 |       repository = new ProposalRepository(mockSupabase)\n      261 |\n    > 262 |       const result = await repository.updateSection(\n          |                                       ^\n      263 |         'proposal-1',\n      264 |         'section-1',\n      265 |         sectionUpdate\n\n      at Object.updateSection (__tests__/lib/db/repositories/proposal.repository.test.ts:262:39)\n\n  ● ProposalRepository › updateSection › should validate section data\n\n    TypeError: repository.updateSection is not a function\n\n      280 |       )\n      281 |\n    > 282 |       await expect(repository.updateSection('proposal-1', 'section-1', {\n          |                               ^\n      283 |         content: 'x'.repeat(100000) // Too long\n      284 |       })).rejects.toThrow(ValidationError)\n      285 |     })\n\n      at Object.updateSection (__tests__/lib/db/repositories/proposal.repository.test.ts:282:31)\n\n  ● ProposalRepository › reorderSections › should update section display orders\n\n    TypeError: repository.reorderSections is not a function\n\n      312 |       repository = new ProposalRepository(mockSupabase)\n      313 |\n    > 314 |       await repository.reorderSections('proposal-1', sectionOrders)\n          |                        ^\n      315 |\n      316 |       expect(mockSupabase.from).toHaveBeenCalledTimes(3)\n      317 |     })\n\n      at Object.reorderSections (__tests__/lib/db/repositories/proposal.repository.test.ts:314:24)\n\n  ● ProposalRepository › reorderSections › should handle reorder errors\n\n    TypeError: repository.reorderSections is not a function\n\n      325 |       repository = new ProposalRepository(mockSupabase)\n      326 |\n    > 327 |       await expect(repository.reorderSections('proposal-1', [\n          |                               ^\n      328 |         { id: 'section-1', display_order: 1 }\n      329 |       ])).rejects.toThrow('Database operation failed')\n      330 |     })\n\n      at Object.reorderSections (__tests__/lib/db/repositories/proposal.repository.test.ts:327:31)\n\n  ● ProposalRepository › updateStatus › should update proposal status with timestamp\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n      Object {\n    -   \"actual_submission_date\": \"2025-06-08T21:41:22.205Z\",\n        \"status\": \"submitted\",\n      },\n\n    Number of calls: 1\n\n      356 |       \n      357 |       const query = mockSupabase.from.mock.results[0]?.value\n    > 358 |       expect(query.update).toHaveBeenCalledWith({\n          |                            ^\n      359 |         status: 'submitted',\n      360 |         actual_submission_date: now.toISOString()\n      361 |       })\n\n      at Object.toHaveBeenCalledWith (__tests__/lib/db/repositories/proposal.repository.test.ts:358:28)\n\n  ● ProposalRepository › updateStatus › should clear submission date when reverting to draft\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    - Expected\n    + Received\n\n      Object {\n    -   \"actual_submission_date\": null,\n        \"status\": \"draft\",\n      },\n\n    Number of calls: 1\n\n      380 |\n      381 |       const query = mockSupabase.from.mock.results[0]?.value\n    > 382 |       expect(query.update).toHaveBeenCalledWith({\n          |                            ^\n      383 |         status: 'draft',\n      384 |         actual_submission_date: null\n      385 |       })\n\n      at Object.toHaveBeenCalledWith (__tests__/lib/db/repositories/proposal.repository.test.ts:382:28)\n\n  ● ProposalRepository › updateStatus › should validate status transitions\n\n    expect(received).rejects.toThrow()\n\n    Received promise resolved instead of rejected\n    Resolved to value: null\n\n      393 |       )\n      394 |\n    > 395 |       await expect(repository.updateStatus('proposal-1', 'draft'))\n          |             ^\n      396 |         .rejects.toThrow(ValidationError)\n      397 |     })\n      398 |   })\n\n      at expect (node_modules/expect/build/index.js:113:15)\n      at Object.expect (__tests__/lib/db/repositories/proposal.repository.test.ts:395:13)\n\n  ● ProposalRepository › getStatisticsByCompany › should calculate proposal statistics\n\n    TypeError: repository.getStatisticsByCompany is not a function\n\n      427 |\n      428 |       repository = new ProposalRepository(mockSupabase)\n    > 429 |       const stats = await repository.getStatisticsByCompany('company-1')\n          |                                      ^\n      430 |\n      431 |       expect(stats).toEqual({\n      432 |         total: 50,\n\n      at Object.getStatisticsByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:429:38)\n\n  ● ProposalRepository › getStatisticsByCompany › should calculate average time to submit\n\n    TypeError: repository.getStatisticsByCompany is not a function\n\n      480 |\n      481 |       repository = new ProposalRepository(mockSupabase)\n    > 482 |       const stats = await repository.getStatisticsByCompany('company-1')\n          |                                      ^\n      483 |\n      484 |       expect(stats.avgTimeToSubmit).toBe(5) // Average of 4 and 6 days\n      485 |     })\n\n      at Object.getStatisticsByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:482:38)\n\n  ● ProposalRepository › getStatisticsByCompany › should calculate average proposal value\n\n    TypeError: repository.getStatisticsByCompany is not a function\n\n      507 |\n      508 |       repository = new ProposalRepository(mockSupabase)\n    > 509 |       const stats = await repository.getStatisticsByCompany('company-1')\n          |                                      ^\n      510 |\n      511 |       expect(stats.avgProposalValue).toBe(350000)\n      512 |     })\n\n      at Object.getStatisticsByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:509:38)\n\n  ● ProposalRepository › findExpiringProposals › should find proposals with upcoming deadlines\n\n    TypeError: repository.findExpiringProposals is not a function\n\n      526 |       repository = new ProposalRepository(mockSupabase)\n      527 |\n    > 528 |       const result = await repository.findExpiringProposals(7)\n          |                                       ^\n      529 |\n      530 |       expect(result.length).toBeGreaterThan(0)\n      531 |       \n\n      at Object.findExpiringProposals (__tests__/lib/db/repositories/proposal.repository.test.ts:528:39)\n\n  ● ProposalRepository › findExpiringProposals › should include company filter if provided\n\n    TypeError: repository.findExpiringProposals is not a function\n\n      545 |       repository = new ProposalRepository(mockSupabase)\n      546 |\n    > 547 |       await repository.findExpiringProposals(7, 'company-1')\n          |                        ^\n      548 |\n      549 |       const query = mockSupabase.from.mock.results[0]?.value\n      550 |       expect(query.eq).toHaveBeenCalledWith('company_id', 'company-1')\n\n      at Object.findExpiringProposals (__tests__/lib/db/repositories/proposal.repository.test.ts:547:24)\n\n  ● ProposalRepository › duplicateProposal › should create a copy of proposal with sections\n\n    TypeError: repository.duplicateProposal is not a function\n\n      576 |       repository = new ProposalRepository(mockSupabase)\n      577 |\n    > 578 |       const result = await repository.duplicateProposal('proposal-1', 'user-1')\n          |                                       ^\n      579 |\n      580 |       expect(result.id).toBe(newProposalId)\n      581 |       expect(result.title).toBe('Copy of Medical Equipment Supply Proposal - VA Contract')\n\n      at Object.duplicateProposal (__tests__/lib/db/repositories/proposal.repository.test.ts:578:39)\n\n  ● ProposalRepository › duplicateProposal › should reset status and dates for duplicate\n\n    TypeError: repository.duplicateProposal is not a function\n\n      602 |       repository = new ProposalRepository(mockSupabase)\n      603 |\n    > 604 |       await repository.duplicateProposal('proposal-1', 'user-1')\n          |                        ^\n      605 |\n      606 |       const insertQuery = mockSupabase.from.mock.results[1]?.value\n      607 |       expect(insertQuery.insert).toHaveBeenCalledWith(\n\n      at Object.duplicateProposal (__tests__/lib/db/repositories/proposal.repository.test.ts:604:24)\n\n  ● ProposalRepository › Performance › should handle bulk operations efficiently\n\n    TypeError: repository.findByCompany is not a function\n\n      636 |\n      637 |       performanceTracker.mark('start')\n    > 638 |       const result = await repository.findByCompany('company-1', {\n          |                                       ^\n      639 |         page: 1,\n      640 |         pageSize: 100\n      641 |       })\n\n      at Object.findByCompany (__tests__/lib/db/repositories/proposal.repository.test.ts:638:39)\n\n  ● ProposalRepository › Error Handling › should handle proposal not found\n\n    DatabaseError: The result contains 0 rows\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at ProposalRepository.handleError [as findById] (lib/db/repositories/base.repository.ts:86:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:660:22)\n\n  ● ProposalRepository › Error Handling › should handle validation errors from validator\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected constructor: ValidationError\n    Received constructor: DatabaseError\n\n    Received message: \"An unexpected database error occurred\"\n\n          474 |     }\n          475 |\n        > 476 |     return new DatabaseError(\n              |            ^\n          477 |       'An unexpected database error occurred',\n          478 |       'UNKNOWN',\n          479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at ProposalRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:673:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/proposal.repository.test.ts:674:18)\n\n  ● ProposalRepository › Error Handling › should handle concurrent modification errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Database operation failed\"\n    Received message:   \"could not serialize access due to concurrent update\"\n\n          466 |           )\n          467 |         default:\n        > 468 |           return new DatabaseError(\n              |                  ^\n          469 |             error.message || 'Database operation failed',\n          470 |             error.code,\n          471 |             { operation, table: this.tableName, ...context }\n\n      at ProposalRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at ProposalRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/proposal.repository.test.ts:688:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/proposal.repository.test.ts:689:18)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/proposal.repository.test.ts","startTime":1749418881321,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["OpportunityRepository","search"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should search opportunities with basic filters","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should search opportunities with basic filters"},{"ancestorTitles":["OpportunityRepository","search"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should filter by NAICS codes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should filter by NAICS codes"},{"ancestorTitles":["OpportunityRepository","search"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should filter medical opportunities only","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should filter medical opportunities only"},{"ancestorTitles":["OpportunityRepository","search"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should filter by value range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should filter by value range"},{"ancestorTitles":["OpportunityRepository","search"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should filter by dates","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should filter by dates"},{"ancestorTitles":["OpportunityRepository","search"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should exclude expired opportunities by default","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should exclude expired opportunities by default"},{"ancestorTitles":["OpportunityRepository","search"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should include expired when specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include expired when specified"},{"ancestorTitles":["OpportunityRepository","search"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should handle pagination correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle pagination correctly"},{"ancestorTitles":["OpportunityRepository","search"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository search should enhance opportunities with metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should enhance opportunities with metadata"},{"ancestorTitles":["OpportunityRepository","findByIdWithDetails"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository findByIdWithDetails should get opportunity with all related data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get opportunity with all related data"},{"ancestorTitles":["OpportunityRepository","findByIdWithDetails"],"duration":1,"failureDetails":[{"code":"PGRST116","message":"The result contains 0 rows"}],"failureMessages":["The result contains 0 rows"],"fullName":"OpportunityRepository findByIdWithDetails should return null when not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when not found"},{"ancestorTitles":["OpportunityRepository","findByNoticeIds"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository findByNoticeIds should find opportunities by notice IDs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should find opportunities by notice IDs"},{"ancestorTitles":["OpportunityRepository","findByNoticeIds"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository findByNoticeIds should handle empty array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty array"},{"ancestorTitles":["OpportunityRepository","findByNoticeIds"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository findByNoticeIds should chunk large arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should chunk large arrays"},{"ancestorTitles":["OpportunityRepository","saveForUser"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository saveForUser should save opportunity for user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should save opportunity for user"},{"ancestorTitles":["OpportunityRepository","saveForUser"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository saveForUser should throw NotFoundError if opportunity does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw NotFoundError if opportunity does not exist"},{"ancestorTitles":["OpportunityRepository","unsaveForUser"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository unsaveForUser should remove saved opportunity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should remove saved opportunity"},{"ancestorTitles":["OpportunityRepository","getSavedForUser"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository getSavedForUser should get saved opportunities with pagination","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should get saved opportunities with pagination"},{"ancestorTitles":["OpportunityRepository","getExpiring"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository getExpiring should get opportunities expiring within days","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get opportunities expiring within days"},{"ancestorTitles":["OpportunityRepository","bulkUpsert"],"duration":11,"failureDetails":[{"matcherResult":{"actual":200,"expected":100,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 100\nReceived: 200","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 100\nReceived: 200\n    at Object.toBe (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/opportunity.repository.test.ts:453:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"OpportunityRepository bulkUpsert should validate and upsert opportunities in batches","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate and upsert opportunities in batches"},{"ancestorTitles":["OpportunityRepository","bulkUpsert"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository bulkUpsert should continue on batch failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should continue on batch failure"},{"ancestorTitles":["OpportunityRepository","bulkUpsert"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository bulkUpsert should handle empty array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty array"},{"ancestorTitles":["OpportunityRepository","getStatistics"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository getStatistics should calculate opportunity statistics","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should calculate opportunity statistics"},{"ancestorTitles":["OpportunityRepository","getStatistics"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository getStatistics should handle statistics without user ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle statistics without user ID"},{"ancestorTitles":["OpportunityRepository","Performance"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"OpportunityRepository Performance should handle large result sets efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large result sets efficiently"}],"endTime":1749418882381,"message":"  ● OpportunityRepository › findByIdWithDetails › should return null when not found\n\n    The result contains 0 rows\n\n\n\n  ● OpportunityRepository › bulkUpsert › should validate and upsert opportunities in batches\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 100\n    Received: 200\n\n      451 |       performanceTracker.mark('end')\n      452 |\n    > 453 |       expect(result).toBe(100) // Only first batch succeeds in our mock\n          |                      ^\n      454 |       expect(mockSupabase.from).toHaveBeenCalledTimes(2) // 100 + 50\n      455 |       \n      456 |       const duration = performanceTracker.measure('bulk-upsert', 'start', 'end')\n\n      at Object.toBe (__tests__/lib/db/repositories/opportunity.repository.test.ts:453:22)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/opportunity.repository.test.ts","startTime":1749418881366,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["BaseRepository","CRUD Operations","findById"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findById should find a record by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should find a record by ID"},{"ancestorTitles":["BaseRepository","CRUD Operations","findById"],"duration":4,"failureDetails":[{"name":"DatabaseError","code":"PGRST116","statusCode":500,"details":{"operation":"findById","table":"opportunities","id":"non-existent"},"timestamp":"2025-06-08T21:41:22.264Z","isOperational":true}],"failureMessages":["DatabaseError: The result contains 0 rows\n    at TestRepository.handleError (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:468:18)\n    at TestRepository.handleError [as findById] (/home/locklearwyatt/projects/medcontracthub/lib/db/repositories/base.repository.ts:86:18)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts:73:24)"],"fullName":"BaseRepository CRUD Operations findById should return null when record not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when record not found"},{"ancestorTitles":["BaseRepository","CRUD Operations","findById"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findById should use custom select columns","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom select columns"},{"ancestorTitles":["BaseRepository","CRUD Operations","findAll"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findAll should return all records","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return all records"},{"ancestorTitles":["BaseRepository","CRUD Operations","findAll"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findAll should apply filters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should apply filters"},{"ancestorTitles":["BaseRepository","CRUD Operations","findAll"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findAll should apply ordering","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should apply ordering"},{"ancestorTitles":["BaseRepository","CRUD Operations","findAll"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findAll should handle null filters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle null filters"},{"ancestorTitles":["BaseRepository","CRUD Operations","findPaginated"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findPaginated should return paginated results","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return paginated results"},{"ancestorTitles":["BaseRepository","CRUD Operations","findPaginated"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations findPaginated should calculate correct offset","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate correct offset"},{"ancestorTitles":["BaseRepository","CRUD Operations","create"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations create should create a new record","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new record"},{"ancestorTitles":["BaseRepository","CRUD Operations","create"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations create should handle unique constraint violations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unique constraint violations"},{"ancestorTitles":["BaseRepository","CRUD Operations","createMany"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations createMany should create multiple records","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create multiple records"},{"ancestorTitles":["BaseRepository","CRUD Operations","createMany"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations createMany should return empty array for empty input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return empty array for empty input"},{"ancestorTitles":["BaseRepository","CRUD Operations","update"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations update should update a record","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update a record"},{"ancestorTitles":["BaseRepository","CRUD Operations","update"],"duration":33,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:314:9)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:314:9)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:314:9)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts:315:20)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"BaseRepository CRUD Operations update should throw NotFoundError when record does not exist","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw NotFoundError when record does not exist"},{"ancestorTitles":["BaseRepository","CRUD Operations","updateMany"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations updateMany should update multiple records","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update multiple records"},{"ancestorTitles":["BaseRepository","CRUD Operations","delete"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations delete should delete a record","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should delete a record"},{"ancestorTitles":["BaseRepository","CRUD Operations","delete"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as delete] (lib/db/repositories/base.repository.ts:289:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:367:9)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as delete] (lib/db/repositories/base.repository.ts:289:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:367:9)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as delete] (lib/db/repositories/base.repository.ts:289:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:367:9)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts:368:20)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"BaseRepository CRUD Operations delete should throw NotFoundError when record does not exist","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should throw NotFoundError when record does not exist"},{"ancestorTitles":["BaseRepository","CRUD Operations","deleteMany"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations deleteMany should delete multiple records and return count","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should delete multiple records and return count"},{"ancestorTitles":["BaseRepository","CRUD Operations","exists"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations exists should return true when records exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true when records exist"},{"ancestorTitles":["BaseRepository","CRUD Operations","exists"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations exists should return false when no records exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when no records exist"},{"ancestorTitles":["BaseRepository","CRUD Operations","count"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations count should return total count","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return total count"},{"ancestorTitles":["BaseRepository","CRUD Operations","count"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository CRUD Operations count should count with filters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should count with filters"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Error Handling should handle unique constraint violations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle unique constraint violations"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Error Handling should handle foreign key violations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle foreign key violations"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Error Handling should handle not null violations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle not null violations"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Error Handling should handle table not found errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle table not found errors"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":2,"failureDetails":[{}],"failureMessages":["Error: expect(received).toMatchObject(expected)\n\nMatcher error: received value must be a non-null object\n\nReceived has value: undefined\n    at Object.toMatchObject (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts:502:29)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"BaseRepository Error Handling should preserve context in errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should preserve context in errors"},{"ancestorTitles":["BaseRepository","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Error Handling should pass through existing AppErrors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass through existing AppErrors"},{"ancestorTitles":["BaseRepository","Query Building"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Query Building should build query with all options","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should build query with all options"},{"ancestorTitles":["BaseRepository","Query Building"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Query Building should handle empty options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty options"},{"ancestorTitles":["BaseRepository","Validation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Validation should validate valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate valid data"},{"ancestorTitles":["BaseRepository","Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Validation should throw ValidationError for invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw ValidationError for invalid data"},{"ancestorTitles":["BaseRepository","Validation"],"duration":2,"failureDetails":[{}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.toHaveLength (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts:596:51)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"BaseRepository Validation should include validation errors in exception","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include validation errors in exception"},{"ancestorTitles":["BaseRepository","Transaction Support"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Transaction Support should execute callback with client","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute callback with client"},{"ancestorTitles":["BaseRepository","Transaction Support"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseRepository Transaction Support should propagate callback errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should propagate callback errors"}],"endTime":1749418882502,"message":"  ● BaseRepository › CRUD Operations › findById › should return null when record not found\n\n    DatabaseError: The result contains 0 rows\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as findById] (lib/db/repositories/base.repository.ts:86:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:73:24)\n\n  ● BaseRepository › CRUD Operations › update › should throw NotFoundError when record does not exist\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected constructor: NotFoundError\n    Received constructor: DatabaseError\n\n    Received message: \"The result contains 0 rows\"\n\n          466 |           )\n          467 |         default:\n        > 468 |           return new DatabaseError(\n              |                  ^\n          469 |             error.message || 'Database operation failed',\n          470 |             error.code,\n          471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:314:9)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/base.repository.test.ts:315:20)\n\n  ● BaseRepository › CRUD Operations › delete › should throw NotFoundError when record does not exist\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected constructor: NotFoundError\n    Received constructor: DatabaseError\n\n    Received message: \"The result contains 0 rows\"\n\n          466 |           )\n          467 |         default:\n        > 468 |           return new DatabaseError(\n              |                  ^\n          469 |             error.message || 'Database operation failed',\n          470 |             error.code,\n          471 |             { operation, table: this.tableName, ...context }\n\n      at TestRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at TestRepository.handleError [as delete] (lib/db/repositories/base.repository.ts:289:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/base.repository.test.ts:367:9)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/base.repository.test.ts:368:20)\n\n  ● BaseRepository › Error Handling › should preserve context in errors\n\n    expect(received).toMatchObject(expected)\n\n    Matcher error: received value must be a non-null object\n\n    Received has value: undefined\n\n      500 |       ) as DatabaseError\n      501 |\n    > 502 |       expect(error.context).toMatchObject({\n          |                             ^\n      503 |         ...context,\n      504 |         table: 'opportunities',\n      505 |         operation: 'update'\n\n      at Object.toMatchObject (__tests__/lib/db/repositories/base.repository.test.ts:502:29)\n\n  ● BaseRepository › Validation › should include validation errors in exception\n\n    expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n      594 |       } catch (error) {\n      595 |         expect(error).toBeInstanceOf(ValidationError)\n    > 596 |         expect((error as ValidationError).errors).toHaveLength(1)\n          |                                                   ^\n      597 |         expect((error as ValidationError).errors[0].path).toEqual(['name'])\n      598 |       }\n      599 |     })\n\n      at Object.toHaveLength (__tests__/lib/db/repositories/base.repository.test.ts:596:51)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/base.repository.test.ts","startTime":1749418881424,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":9,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n    at sanitizeInput (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:33:39)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:32:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should pass through safe strings","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should pass through safe strings"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":37,"failureDetails":[{"matcherResult":{"message":"expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n      49 |\n      50 |       maliciousInputs.forEach(input => {\n    > 51 |         expect(() => QuerySanitizer.sanitizeInput(input))\n         |                                     ^\n      52 |           .toThrow('Input contains potentially harmful SQL patterns')\n      53 |       })\n      54 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:51:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:52:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:50:23)","pass":false}}],"failureMessages":["Error: expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n      49 |\n      50 |       maliciousInputs.forEach(input => {\n    > 51 |         expect(() => QuerySanitizer.sanitizeInput(input))\n         |                                     ^\n      52 |           .toThrow('Input contains potentially harmful SQL patterns')\n      53 |       })\n      54 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:51:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:52:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:50:23)\n    at toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:52:12)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:50:23)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should detect and reject SQL injection attempts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect and reject SQL injection attempts"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":9,"failureDetails":[{"matcherResult":{"message":"expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n      70 |       dangerousCommands.forEach(command => {\n      71 |         const input = `normal text ${command} more text`\n    > 72 |         expect(() => QuerySanitizer.sanitizeInput(input))\n         |                                     ^\n      73 |           .toThrow('Input contains potentially harmful SQL patterns')\n      74 |       })\n      75 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:72:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:73:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:70:25)","pass":false}}],"failureMessages":["Error: expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n      70 |       dangerousCommands.forEach(command => {\n      71 |         const input = `normal text ${command} more text`\n    > 72 |         expect(() => QuerySanitizer.sanitizeInput(input))\n         |                                     ^\n      73 |           .toThrow('Input contains potentially harmful SQL patterns')\n      74 |       })\n      75 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:72:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:73:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:70:25)\n    at toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:73:12)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:70:25)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should handle various dangerous SQL commands","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle various dangerous SQL commands"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n    at sanitizeInput (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:87:39)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:86:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should allow SQL keywords in legitimate contexts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should allow SQL keywords in legitimate contexts"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n    at Object.sanitizeInput (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:93:29)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should handle empty and null inputs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty and null inputs"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n    at Object.sanitizeInput (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:99:29)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should trim whitespace","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should trim whitespace"},{"ancestorTitles":["QuerySanitizer","sanitizeInput"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n    at sanitizeInput (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:112:31)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:111:14)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeInput should handle special characters appropriately","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle special characters appropriately"},{"ancestorTitles":["QuerySanitizer","sanitizeArray"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n    at Object.sanitizeArray (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:120:37)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeArray should sanitize all array elements","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sanitize all array elements"},{"ancestorTitles":["QuerySanitizer","sanitizeArray"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeArray is not a function\"\n\n      126 |       const input = ['safe', \"'; DROP TABLE users;--\", 'also safe']\n      127 |       \n    > 128 |       expect(() => QuerySanitizer.sanitizeArray(input))\n          |                                   ^\n      129 |         .toThrow('Input contains potentially harmful SQL patterns')\n      130 |     })\n      131 |\n\n      at sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:128:35)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (__tests__/lib/db/security/sanitization.test.ts:129:10)","pass":false}}],"failureMessages":["Error: expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\nReceived message:   \"_sanitization.QuerySanitizer.sanitizeArray is not a function\"\n\n      126 |       const input = ['safe', \"'; DROP TABLE users;--\", 'also safe']\n      127 |       \n    > 128 |       expect(() => QuerySanitizer.sanitizeArray(input))\n          |                                   ^\n      129 |         .toThrow('Input contains potentially harmful SQL patterns')\n      130 |     })\n      131 |\n\n      at sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:128:35)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (__tests__/lib/db/security/sanitization.test.ts:129:10)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:129:10)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeArray should reject arrays with malicious elements","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject arrays with malicious elements"},{"ancestorTitles":["QuerySanitizer","sanitizeArray"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n    at Object.sanitizeArray (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:133:29)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeArray should handle empty arrays","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty arrays"},{"ancestorTitles":["QuerySanitizer","sanitizeArray"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n    at Object.sanitizeArray (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:138:37)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeArray should filter out empty strings","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter out empty strings"},{"ancestorTitles":["QuerySanitizer","sanitizeObject"],"duration":11,"failureDetails":[{"matcherResult":{"actual":{"isValid":false,"errors":["Unknown validation error"],"sanitized":false},"expected":{"name":"Test Company","email":"test@example.com","description":"Medical supplies provider"},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 5\n\n  Object {\n-   \"description\": \"Medical supplies provider\",\n-   \"email\": \"test@example.com\",\n-   \"name\": \"Test Company\",\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 5\n\n  Object {\n-   \"description\": \"Medical supplies provider\",\n-   \"email\": \"test@example.com\",\n-   \"name\": \"Test Company\",\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }\n    at Object.toEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:153:22)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeObject should sanitize all object values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sanitize all object values"},{"ancestorTitles":["QuerySanitizer","sanitizeObject"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\n\nReceived function did not throw","pass":false}}],"failureMessages":["Error: expect(received).toThrow(expected)\n\nExpected substring: \"Input contains potentially harmful SQL patterns\"\n\nReceived function did not throw\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:163:10)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeObject should reject objects with malicious values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject objects with malicious values"},{"ancestorTitles":["QuerySanitizer","sanitizeObject"],"duration":2,"failureDetails":[{"matcherResult":{"actual":{"isValid":false,"errors":["Unknown validation error"],"sanitized":false},"expected":{"company":{"name":"Test Co","address":{"street":"123 Main St","city":"Boston"}}},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 5\n\n  Object {\n-   \"company\": Object {\n-     \"address\": Object {\n-       \"city\": \"Boston\",\n-       \"street\": \"123 Main St\",\n-     },\n-     \"name\": \"Test Co\",\n-   },\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 5\n\n  Object {\n-   \"company\": Object {\n-     \"address\": Object {\n-       \"city\": \"Boston\",\n-       \"street\": \"123 Main St\",\n-     },\n-     \"name\": \"Test Co\",\n-   },\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }\n    at Object.toEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:178:22)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeObject should handle nested objects recursively","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle nested objects recursively"},{"ancestorTitles":["QuerySanitizer","sanitizeObject"],"duration":2,"failureDetails":[{"matcherResult":{"actual":{"isValid":false,"errors":["Unknown validation error"],"sanitized":false},"expected":{"tags":["medical","equipment"],"codes":["339112","339113"]},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 4\n\n  Object {\n-   \"codes\": Array [\n-     \"339112\",\n-     \"339113\",\n-   ],\n-   \"tags\": Array [\n-     \"medical\",\n-     \"equipment\",\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n    ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 4\n\n  Object {\n-   \"codes\": Array [\n-     \"339112\",\n-     \"339113\",\n-   ],\n-   \"tags\": Array [\n-     \"medical\",\n-     \"equipment\",\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n    ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }\n    at Object.toEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:188:22)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeObject should sanitize arrays within objects","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sanitize arrays within objects"},{"ancestorTitles":["QuerySanitizer","sanitizeObject"],"duration":2,"failureDetails":[{"matcherResult":{"actual":{"isValid":false,"errors":["Unknown validation error"],"sanitized":false},"expected":{"name":"Test","active":true,"count":42,"date":{},"nullValue":null},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 5\n\n  Object {\n-   \"active\": true,\n-   \"count\": 42,\n-   \"date\": 2024-01-01T00:00:00.000Z,\n-   \"name\": \"Test\",\n-   \"nullValue\": null,\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 5\n\n  Object {\n-   \"active\": true,\n-   \"count\": 42,\n-   \"date\": 2024-01-01T00:00:00.000Z,\n-   \"name\": \"Test\",\n-   \"nullValue\": null,\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }\n    at Object.toEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:201:22)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeObject should preserve non-string values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should preserve non-string values"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","emailSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'email')\n    at email (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:215:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:214:19)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations emailSchema should validate correct emails","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate correct emails"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","emailSchema"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations emailSchema should reject invalid emails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should reject invalid emails"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","phoneSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'phone')\n    at phone (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:245:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:244:19)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations phoneSchema should validate correct phone numbers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate correct phone numbers"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","phoneSchema"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations phoneSchema should reject invalid phone numbers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject invalid phone numbers"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","uuidSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'uuid')\n    at uuid (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:271:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:270:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations uuidSchema should validate correct UUIDs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate correct UUIDs"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","uuidSchema"],"duration":39,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations uuidSchema should reject invalid UUIDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject invalid UUIDs"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","naicsCodeSchema"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'naicsCode')\n    at naicsCode (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:294:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:293:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations naicsCodeSchema should validate correct NAICS codes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate correct NAICS codes"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","naicsCodeSchema"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations naicsCodeSchema should reject invalid NAICS codes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should reject invalid NAICS codes"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","dateSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'date')\n    at date (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:323:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:322:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations dateSchema should parse valid date strings","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should parse valid date strings"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","dateSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'date')\n    at Object.date (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:330:42)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations dateSchema should accept Date objects","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should accept Date objects"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","dateSchema"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations dateSchema should reject invalid dates","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should reject invalid dates"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","paginationSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'pagination')\n    at pagination (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:357:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:356:13)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations paginationSchema should validate correct pagination params","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate correct pagination params"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","paginationSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'pagination')\n    at Object.pagination (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:363:42)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations paginationSchema should apply defaults","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should apply defaults"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","paginationSchema"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations paginationSchema should reject invalid pagination","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should reject invalid pagination"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","opportunitySearchSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n    at Object.opportunitySearch (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:398:42)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations opportunitySearchSchema should validate complete search params","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate complete search params"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","opportunitySearchSchema"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n    at Object.opportunitySearch (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:406:42)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations opportunitySearchSchema should handle partial params with defaults","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle partial params with defaults"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","opportunitySearchSchema"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n    at Object.opportunitySearch (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:426:42)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Zod Schema Validations opportunitySearchSchema should sanitize and validate all string inputs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sanitize and validate all string inputs"},{"ancestorTitles":["QuerySanitizer","Zod Schema Validations","opportunitySearchSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QuerySanitizer Zod Schema Validations opportunitySearchSchema should reject malicious search params","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject malicious search params"},{"ancestorTitles":["QuerySanitizer","sanitizeError"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n    at Object.sanitizeError (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:445:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeError should sanitize error messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sanitize error messages"},{"ancestorTitles":["QuerySanitizer","sanitizeError"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n    at Object.sanitizeError (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:453:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeError should preserve safe error messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should preserve safe error messages"},{"ancestorTitles":["QuerySanitizer","sanitizeError"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n    at Object.sanitizeError (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:462:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeError should handle errors with stack traces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors with stack traces"},{"ancestorTitles":["QuerySanitizer","sanitizeError"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n    at Object.sanitizeError (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:468:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer sanitizeError should handle non-Error objects","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle non-Error objects"},{"ancestorTitles":["QuerySanitizer","Performance"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n    at Object.sanitizeArray (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:479:35)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Performance should handle large input arrays efficiently","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large input arrays efficiently"},{"ancestorTitles":["QuerySanitizer","Performance"],"duration":2,"failureDetails":[{"matcherResult":{"actual":{"isValid":false,"errors":["Unknown validation error"],"sanitized":false},"expected":{"level1":{"level2":{"level3":{"level4":{"level5":{"value":"deep value"}}}}}},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  5\n\n  Object {\n-   \"level1\": Object {\n-     \"level2\": Object {\n-       \"level3\": Object {\n-         \"level4\": Object {\n-           \"level5\": Object {\n-             \"value\": \"deep value\",\n-           },\n-         },\n-       },\n-     },\n-   },\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  5\n\n  Object {\n-   \"level1\": Object {\n-     \"level2\": Object {\n-       \"level3\": Object {\n-         \"level4\": Object {\n-           \"level5\": Object {\n-             \"value\": \"deep value\",\n-           },\n-         },\n-       },\n-     },\n-   },\n+   \"errors\": Array [\n+     \"Unknown validation error\",\n+   ],\n+   \"isValid\": false,\n+   \"sanitized\": false,\n  }\n    at Object.toEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts:502:20)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"QuerySanitizer Performance should handle deeply nested objects","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle deeply nested objects"}],"endTime":1749418882522,"message":"  ● QuerySanitizer › sanitizeInput › should pass through safe strings\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n\n      31 |\n      32 |       safeInputs.forEach(input => {\n    > 33 |         const result = QuerySanitizer.sanitizeInput(input)\n         |                                       ^\n      34 |         expect(result).toBe(input)\n      35 |       })\n      36 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:33:39)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:32:18)\n\n  ● QuerySanitizer › sanitizeInput › should detect and reject SQL injection attempts\n\n    expect(received).toThrow(expected)\n\n    Expected substring: \"Input contains potentially harmful SQL patterns\"\n    Received message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n          49 |\n          50 |       maliciousInputs.forEach(input => {\n        > 51 |         expect(() => QuerySanitizer.sanitizeInput(input))\n             |                                     ^\n          52 |           .toThrow('Input contains potentially harmful SQL patterns')\n          53 |       })\n          54 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:51:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:52:12)\n                at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:50:23)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:52:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:50:23)\n\n  ● QuerySanitizer › sanitizeInput › should handle various dangerous SQL commands\n\n    expect(received).toThrow(expected)\n\n    Expected substring: \"Input contains potentially harmful SQL patterns\"\n    Received message:   \"_sanitization.QuerySanitizer.sanitizeInput is not a function\"\n\n          70 |       dangerousCommands.forEach(command => {\n          71 |         const input = `normal text ${command} more text`\n        > 72 |         expect(() => QuerySanitizer.sanitizeInput(input))\n             |                                     ^\n          73 |           .toThrow('Input contains potentially harmful SQL patterns')\n          74 |       })\n          75 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:72:37)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:73:12)\n                at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:70:25)\n      at toThrow (__tests__/lib/db/security/sanitization.test.ts:73:12)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:70:25)\n\n  ● QuerySanitizer › sanitizeInput › should allow SQL keywords in legitimate contexts\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n\n      85 |\n      86 |       legitimateInputs.forEach(input => {\n    > 87 |         const result = QuerySanitizer.sanitizeInput(input)\n         |                                       ^\n      88 |         expect(result).toBe(input)\n      89 |       })\n      90 |     })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:87:39)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:86:24)\n\n  ● QuerySanitizer › sanitizeInput › should handle empty and null inputs\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n\n      91 |\n      92 |     it('should handle empty and null inputs', () => {\n    > 93 |       expect(QuerySanitizer.sanitizeInput('')).toBe('')\n         |                             ^\n      94 |       expect(QuerySanitizer.sanitizeInput(null as any)).toBe('')\n      95 |       expect(QuerySanitizer.sanitizeInput(undefined as any)).toBe('')\n      96 |     })\n\n      at Object.sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:93:29)\n\n  ● QuerySanitizer › sanitizeInput › should trim whitespace\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n\n       97 |\n       98 |     it('should trim whitespace', () => {\n    >  99 |       expect(QuerySanitizer.sanitizeInput('  test  ')).toBe('test')\n          |                             ^\n      100 |       expect(QuerySanitizer.sanitizeInput('\\n\\ttest\\n\\t')).toBe('test')\n      101 |     })\n      102 |\n\n      at Object.sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:99:29)\n\n  ● QuerySanitizer › sanitizeInput › should handle special characters appropriately\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeInput is not a function\n\n      110 |\n      111 |       inputs.forEach(({ input, expected }) => {\n    > 112 |         expect(QuerySanitizer.sanitizeInput(input)).toBe(expected)\n          |                               ^\n      113 |       })\n      114 |     })\n      115 |   })\n\n      at sanitizeInput (__tests__/lib/db/security/sanitization.test.ts:112:31)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:111:14)\n\n  ● QuerySanitizer › sanitizeArray › should sanitize all array elements\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n\n      118 |     it('should sanitize all array elements', () => {\n      119 |       const input = ['test1', 'test2', 'test3']\n    > 120 |       const result = QuerySanitizer.sanitizeArray(input)\n          |                                     ^\n      121 |       \n      122 |       expect(result).toEqual(['test1', 'test2', 'test3'])\n      123 |     })\n\n      at Object.sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:120:37)\n\n  ● QuerySanitizer › sanitizeArray › should reject arrays with malicious elements\n\n    expect(received).toThrow(expected)\n\n    Expected substring: \"Input contains potentially harmful SQL patterns\"\n    Received message:   \"_sanitization.QuerySanitizer.sanitizeArray is not a function\"\n\n          126 |       const input = ['safe', \"'; DROP TABLE users;--\", 'also safe']\n          127 |       \n        > 128 |       expect(() => QuerySanitizer.sanitizeArray(input))\n              |                                   ^\n          129 |         .toThrow('Input contains potentially harmful SQL patterns')\n          130 |     })\n          131 |\n\n      at sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:128:35)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (__tests__/lib/db/security/sanitization.test.ts:129:10)\n      at Object.toThrow (__tests__/lib/db/security/sanitization.test.ts:129:10)\n\n  ● QuerySanitizer › sanitizeArray › should handle empty arrays\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n\n      131 |\n      132 |     it('should handle empty arrays', () => {\n    > 133 |       expect(QuerySanitizer.sanitizeArray([])).toEqual([])\n          |                             ^\n      134 |     })\n      135 |\n      136 |     it('should filter out empty strings', () => {\n\n      at Object.sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:133:29)\n\n  ● QuerySanitizer › sanitizeArray › should filter out empty strings\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n\n      136 |     it('should filter out empty strings', () => {\n      137 |       const input = ['test', '', '  ', 'value']\n    > 138 |       const result = QuerySanitizer.sanitizeArray(input)\n          |                                     ^\n      139 |       \n      140 |       expect(result).toEqual(['test', 'value'])\n      141 |     })\n\n      at Object.sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:138:37)\n\n  ● QuerySanitizer › sanitizeObject › should sanitize all object values\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 5\n\n      Object {\n    -   \"description\": \"Medical supplies provider\",\n    -   \"email\": \"test@example.com\",\n    -   \"name\": \"Test Company\",\n    +   \"errors\": Array [\n    +     \"Unknown validation error\",\n    +   ],\n    +   \"isValid\": false,\n    +   \"sanitized\": false,\n      }\n\n      151 |\n      152 |       const result = QuerySanitizer.sanitizeObject(input)\n    > 153 |       expect(result).toEqual(input)\n          |                      ^\n      154 |     })\n      155 |\n      156 |     it('should reject objects with malicious values', () => {\n\n      at Object.toEqual (__tests__/lib/db/security/sanitization.test.ts:153:22)\n\n  ● QuerySanitizer › sanitizeObject › should reject objects with malicious values\n\n    expect(received).toThrow(expected)\n\n    Expected substring: \"Input contains potentially harmful SQL patterns\"\n\n    Received function did not throw\n\n      161 |\n      162 |       expect(() => QuerySanitizer.sanitizeObject(input))\n    > 163 |         .toThrow('Input contains potentially harmful SQL patterns')\n          |          ^\n      164 |     })\n      165 |\n      166 |     it('should handle nested objects recursively', () => {\n\n      at Object.toThrow (__tests__/lib/db/security/sanitization.test.ts:163:10)\n\n  ● QuerySanitizer › sanitizeObject › should handle nested objects recursively\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 7\n    + Received  + 5\n\n      Object {\n    -   \"company\": Object {\n    -     \"address\": Object {\n    -       \"city\": \"Boston\",\n    -       \"street\": \"123 Main St\",\n    -     },\n    -     \"name\": \"Test Co\",\n    -   },\n    +   \"errors\": Array [\n    +     \"Unknown validation error\",\n    +   ],\n    +   \"isValid\": false,\n    +   \"sanitized\": false,\n      }\n\n      176 |\n      177 |       const result = QuerySanitizer.sanitizeObject(input)\n    > 178 |       expect(result).toEqual(input)\n          |                      ^\n      179 |     })\n      180 |\n      181 |     it('should sanitize arrays within objects', () => {\n\n      at Object.toEqual (__tests__/lib/db/security/sanitization.test.ts:178:22)\n\n  ● QuerySanitizer › sanitizeObject › should sanitize arrays within objects\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 7\n    + Received  + 4\n\n      Object {\n    -   \"codes\": Array [\n    -     \"339112\",\n    -     \"339113\",\n    -   ],\n    -   \"tags\": Array [\n    -     \"medical\",\n    -     \"equipment\",\n    +   \"errors\": Array [\n    +     \"Unknown validation error\",\n        ],\n    +   \"isValid\": false,\n    +   \"sanitized\": false,\n      }\n\n      186 |\n      187 |       const result = QuerySanitizer.sanitizeObject(input)\n    > 188 |       expect(result).toEqual(input)\n          |                      ^\n      189 |     })\n      190 |\n      191 |     it('should preserve non-string values', () => {\n\n      at Object.toEqual (__tests__/lib/db/security/sanitization.test.ts:188:22)\n\n  ● QuerySanitizer › sanitizeObject › should preserve non-string values\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 5\n    + Received  + 5\n\n      Object {\n    -   \"active\": true,\n    -   \"count\": 42,\n    -   \"date\": 2024-01-01T00:00:00.000Z,\n    -   \"name\": \"Test\",\n    -   \"nullValue\": null,\n    +   \"errors\": Array [\n    +     \"Unknown validation error\",\n    +   ],\n    +   \"isValid\": false,\n    +   \"sanitized\": false,\n      }\n\n      199 |\n      200 |       const result = QuerySanitizer.sanitizeObject(input)\n    > 201 |       expect(result).toEqual(input)\n          |                      ^\n      202 |     })\n      203 |   })\n      204 |\n\n      at Object.toEqual (__tests__/lib/db/security/sanitization.test.ts:201:22)\n\n  ● QuerySanitizer › Zod Schema Validations › emailSchema › should validate correct emails\n\n    TypeError: Cannot read properties of undefined (reading 'email')\n\n      213 |\n      214 |       validEmails.forEach(email => {\n    > 215 |         const result = sanitizationSchemas.email.parse(email)\n          |                                            ^\n      216 |         expect(result).toBe(email.toLowerCase())\n      217 |       })\n      218 |     })\n\n      at email (__tests__/lib/db/security/sanitization.test.ts:215:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:214:19)\n\n  ● QuerySanitizer › Zod Schema Validations › phoneSchema › should validate correct phone numbers\n\n    TypeError: Cannot read properties of undefined (reading 'phone')\n\n      243 |\n      244 |       validPhones.forEach(phone => {\n    > 245 |         const result = sanitizationSchemas.phone.parse(phone)\n          |                                            ^\n      246 |         expect(result).toBeTruthy()\n      247 |       })\n      248 |     })\n\n      at phone (__tests__/lib/db/security/sanitization.test.ts:245:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:244:19)\n\n  ● QuerySanitizer › Zod Schema Validations › uuidSchema › should validate correct UUIDs\n\n    TypeError: Cannot read properties of undefined (reading 'uuid')\n\n      269 |\n      270 |       validUUIDs.forEach(uuid => {\n    > 271 |         const result = sanitizationSchemas.uuid.parse(uuid)\n          |                                            ^\n      272 |         expect(result).toBe(uuid)\n      273 |       })\n      274 |     })\n\n      at uuid (__tests__/lib/db/security/sanitization.test.ts:271:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:270:18)\n\n  ● QuerySanitizer › Zod Schema Validations › naicsCodeSchema › should validate correct NAICS codes\n\n    TypeError: Cannot read properties of undefined (reading 'naicsCode')\n\n      292 |\n      293 |       validCodes.forEach(code => {\n    > 294 |         const result = sanitizationSchemas.naicsCode.parse(code)\n          |                                            ^\n      295 |         expect(result).toBe(code)\n      296 |       })\n      297 |     })\n\n      at naicsCode (__tests__/lib/db/security/sanitization.test.ts:294:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:293:18)\n\n  ● QuerySanitizer › Zod Schema Validations › dateSchema › should parse valid date strings\n\n    TypeError: Cannot read properties of undefined (reading 'date')\n\n      321 |\n      322 |       validDates.forEach(date => {\n    > 323 |         const result = sanitizationSchemas.date.parse(date)\n          |                                            ^\n      324 |         expect(result).toBeInstanceOf(Date)\n      325 |       })\n      326 |     })\n\n      at date (__tests__/lib/db/security/sanitization.test.ts:323:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:322:18)\n\n  ● QuerySanitizer › Zod Schema Validations › dateSchema › should accept Date objects\n\n    TypeError: Cannot read properties of undefined (reading 'date')\n\n      328 |     it('should accept Date objects', () => {\n      329 |       const date = new Date('2024-01-01')\n    > 330 |       const result = sanitizationSchemas.date.parse(date)\n          |                                          ^\n      331 |       expect(result).toEqual(date)\n      332 |     })\n      333 |\n\n      at Object.date (__tests__/lib/db/security/sanitization.test.ts:330:42)\n\n  ● QuerySanitizer › Zod Schema Validations › paginationSchema › should validate correct pagination params\n\n    TypeError: Cannot read properties of undefined (reading 'pagination')\n\n      355 |\n      356 |       valid.forEach(params => {\n    > 357 |         const result = sanitizationSchemas.pagination.parse(params)\n          |                                            ^\n      358 |         expect(result).toEqual(params)\n      359 |       })\n      360 |     })\n\n      at pagination (__tests__/lib/db/security/sanitization.test.ts:357:44)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (__tests__/lib/db/security/sanitization.test.ts:356:13)\n\n  ● QuerySanitizer › Zod Schema Validations › paginationSchema › should apply defaults\n\n    TypeError: Cannot read properties of undefined (reading 'pagination')\n\n      361 |\n      362 |     it('should apply defaults', () => {\n    > 363 |       const result = sanitizationSchemas.pagination.parse({})\n          |                                          ^\n      364 |       expect(result).toEqual({ page: 1, pageSize: 20 })\n      365 |     })\n      366 |\n\n      at Object.pagination (__tests__/lib/db/security/sanitization.test.ts:363:42)\n\n  ● QuerySanitizer › Zod Schema Validations › opportunitySearchSchema › should validate complete search params\n\n    TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n\n      396 |       }\n      397 |\n    > 398 |       const result = sanitizationSchemas.opportunitySearch.parse(params)\n          |                                          ^\n      399 |       expect(result.query).toBe('medical equipment')\n      400 |       expect(result.postedAfter).toBeInstanceOf(Date)\n      401 |       expect(result.deadlineBefore).toBeInstanceOf(Date)\n\n      at Object.opportunitySearch (__tests__/lib/db/security/sanitization.test.ts:398:42)\n\n  ● QuerySanitizer › Zod Schema Validations › opportunitySearchSchema › should handle partial params with defaults\n\n    TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n\n      404 |     it('should handle partial params with defaults', () => {\n      405 |       const params = { query: 'test' }\n    > 406 |       const result = sanitizationSchemas.opportunitySearch.parse(params)\n          |                                          ^\n      407 |       \n      408 |       expect(result).toEqual({\n      409 |         query: 'test',\n\n      at Object.opportunitySearch (__tests__/lib/db/security/sanitization.test.ts:406:42)\n\n  ● QuerySanitizer › Zod Schema Validations › opportunitySearchSchema › should sanitize and validate all string inputs\n\n    TypeError: Cannot read properties of undefined (reading 'opportunitySearch')\n\n      424 |       }\n      425 |\n    > 426 |       const result = sanitizationSchemas.opportunitySearch.parse(params)\n          |                                          ^\n      427 |       expect(result.query).toBe('medical supplies')\n      428 |       expect(result.agencies).toEqual(['VA', 'DOD'])\n      429 |     })\n\n      at Object.opportunitySearch (__tests__/lib/db/security/sanitization.test.ts:426:42)\n\n  ● QuerySanitizer › sanitizeError › should sanitize error messages\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n\n      443 |   it('should sanitize error messages', () => {\n      444 |     const error = new Error(\"Database error: user 'admin' not found\")\n    > 445 |     const sanitized = QuerySanitizer.sanitizeError(error)\n          |                                      ^\n      446 |     \n      447 |     expect(sanitized.message).toBe('Database operation failed')\n      448 |     expect(sanitized.originalMessage).toBeUndefined()\n\n      at Object.sanitizeError (__tests__/lib/db/security/sanitization.test.ts:445:38)\n\n  ● QuerySanitizer › sanitizeError › should preserve safe error messages\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n\n      451 |   it('should preserve safe error messages', () => {\n      452 |     const error = new Error('Validation failed: Invalid email format')\n    > 453 |     const sanitized = QuerySanitizer.sanitizeError(error)\n          |                                      ^\n      454 |     \n      455 |     expect(sanitized.message).toBe('Validation failed: Invalid email format')\n      456 |   })\n\n      at Object.sanitizeError (__tests__/lib/db/security/sanitization.test.ts:453:38)\n\n  ● QuerySanitizer › sanitizeError › should handle errors with stack traces\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n\n      460 |     error.stack = 'Error: Test error\\n    at /app/lib/db/query.ts:45:10'\n      461 |     \n    > 462 |     const sanitized = QuerySanitizer.sanitizeError(error)\n          |                                      ^\n      463 |     expect(sanitized.stack).toBeUndefined()\n      464 |   })\n      465 |\n\n      at Object.sanitizeError (__tests__/lib/db/security/sanitization.test.ts:462:38)\n\n  ● QuerySanitizer › sanitizeError › should handle non-Error objects\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeError is not a function\n\n      466 |   it('should handle non-Error objects', () => {\n      467 |     const errorLike = { message: 'Something went wrong', code: 'ERR_001' }\n    > 468 |     const sanitized = QuerySanitizer.sanitizeError(errorLike as any)\n          |                                      ^\n      469 |     \n      470 |     expect(sanitized.message).toBe('An error occurred')\n      471 |   })\n\n      at Object.sanitizeError (__tests__/lib/db/security/sanitization.test.ts:468:38)\n\n  ● QuerySanitizer › Performance › should handle large input arrays efficiently\n\n    TypeError: _sanitization.QuerySanitizer.sanitizeArray is not a function\n\n      477 |     \n      478 |     const start = Date.now()\n    > 479 |     const result = QuerySanitizer.sanitizeArray(largeArray)\n          |                                   ^\n      480 |     const duration = Date.now() - start\n      481 |     \n      482 |     expect(result).toHaveLength(1000)\n\n      at Object.sanitizeArray (__tests__/lib/db/security/sanitization.test.ts:479:35)\n\n  ● QuerySanitizer › Performance › should handle deeply nested objects\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  5\n\n      Object {\n    -   \"level1\": Object {\n    -     \"level2\": Object {\n    -       \"level3\": Object {\n    -         \"level4\": Object {\n    -           \"level5\": Object {\n    -             \"value\": \"deep value\",\n    -           },\n    -         },\n    -       },\n    -     },\n    -   },\n    +   \"errors\": Array [\n    +     \"Unknown validation error\",\n    +   ],\n    +   \"isValid\": false,\n    +   \"sanitized\": false,\n      }\n\n      500 |     \n      501 |     const result = QuerySanitizer.sanitizeObject(deepObject)\n    > 502 |     expect(result).toEqual(deepObject)\n          |                    ^\n      503 |   })\n      504 | })\n      505 | })\n\n      at Object.toEqual (__tests__/lib/db/security/sanitization.test.ts:502:20)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/sanitization.test.ts","startTime":1749418881378,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CompanyRepository","findByIdWithDetails"],"duration":9,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByIdWithDetails is not a function\n    at Object.findByIdWithDetails (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:64:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository findByIdWithDetails should get company with all related data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get company with all related data"},{"ancestorTitles":["CompanyRepository","findByIdWithDetails"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByIdWithDetails is not a function\n    at Object.findByIdWithDetails (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:83:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository findByIdWithDetails should return null when company not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when company not found"},{"ancestorTitles":["CompanyRepository","updateOnboarding"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateOnboarding is not a function\n    at Object.updateOnboarding (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:109:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository updateOnboarding should update company onboarding data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update company onboarding data"},{"ancestorTitles":["CompanyRepository","updateOnboarding"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateOnboarding is not a function\n    at Object.updateOnboarding (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:133:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository updateOnboarding should validate NAICS codes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate NAICS codes"},{"ancestorTitles":["CompanyRepository","addUser"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: repository.addUser is not a function\n    at Object.addUser (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:162:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository addUser should add user to company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should add user to company"},{"ancestorTitles":["CompanyRepository","addUser"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.addUser is not a function\n    at Object.addUser (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:185:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository addUser should handle user already exists error","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle user already exists error"},{"ancestorTitles":["CompanyRepository","removeUser"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.removeUser is not a function\n    at Object.removeUser (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:205:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository removeUser should remove user from company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove user from company"},{"ancestorTitles":["CompanyRepository","removeUser"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: repository.removeUser is not a function\n    at Object.removeUser (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:229:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository removeUser should not allow removing the last owner","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not allow removing the last owner"},{"ancestorTitles":["CompanyRepository","updateUserRole"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateUserRole is not a function\n    at Object.updateUserRole (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:246:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository updateUserRole should update user role","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update user role"},{"ancestorTitles":["CompanyRepository","updateUserRole"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.updateUserRole is not a function\n    at Object.updateUserRole (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:269:31)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository updateUserRole should validate role transitions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate role transitions"},{"ancestorTitles":["CompanyRepository","updateSubscription"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"CompanyRepository updateSubscription should update subscription details","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should update subscription details"},{"ancestorTitles":["CompanyRepository","updateSubscription"],"duration":27,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at CompanyRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at CompanyRepository.updateSubscription (lib/db/repositories/company.repository.ts:242:23)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:308:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at CompanyRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at CompanyRepository.updateSubscription (lib/db/repositories/company.repository.ts:242:23)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:308:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected constructor: NotFoundError\nReceived constructor: DatabaseError\n\nReceived message: \"The result contains 0 rows\"\n\n      466 |           )\n      467 |         default:\n    > 468 |           return new DatabaseError(\n          |                  ^\n      469 |             error.message || 'Database operation failed',\n      470 |             error.code,\n      471 |             { operation, table: this.tableName, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at CompanyRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at CompanyRepository.updateSubscription (lib/db/repositories/company.repository.ts:242:23)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:308:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:310:19)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository updateSubscription should handle subscription not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle subscription not found"},{"ancestorTitles":["CompanyRepository","getStatistics"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getStatistics is not a function\n    at Object.getStatistics (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:364:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository getStatistics should calculate company statistics","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate company statistics"},{"ancestorTitles":["CompanyRepository","getStatistics"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: repository.getStatistics is not a function\n    at Object.getStatistics (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:401:38)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository getStatistics should calculate conversion rate correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate conversion rate correctly"},{"ancestorTitles":["CompanyRepository","findByStripeCustomerId"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByStripeCustomerId is not a function\n    at Object.findByStripeCustomerId (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:418:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository findByStripeCustomerId should find company by Stripe customer ID","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should find company by Stripe customer ID"},{"ancestorTitles":["CompanyRepository","findByStripeCustomerId"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.findByStripeCustomerId is not a function\n    at Object.findByStripeCustomerId (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:435:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository findByStripeCustomerId should return null when not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return null when not found"},{"ancestorTitles":["CompanyRepository","getActiveUsers"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getActiveUsers is not a function\n    at Object.getActiveUsers (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:452:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository getActiveUsers should get active users for company","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get active users for company"},{"ancestorTitles":["CompanyRepository","getActiveUsers"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.getActiveUsers is not a function\n    at Object.getActiveUsers (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:473:24)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository getActiveUsers should filter by activity date","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should filter by activity date"},{"ancestorTitles":["CompanyRepository","bulkUpdateCompanies"],"duration":12,"failureDetails":[{}],"failureMessages":["TypeError: repository.bulkUpdateCompanies is not a function\n    at Object.bulkUpdateCompanies (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:500:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository bulkUpdateCompanies should update multiple companies","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should update multiple companies"},{"ancestorTitles":["CompanyRepository","bulkUpdateCompanies"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: repository.bulkUpdateCompanies is not a function\n    at Object.bulkUpdateCompanies (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:512:39)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository bulkUpdateCompanies should handle empty array","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty array"},{"ancestorTitles":["CompanyRepository","Error Handling"],"duration":5,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:86:18)\n      at CompanyRepository.findById (lib/db/repositories/company.repository.ts:69:21)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:527:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:86:18)\n      at CompanyRepository.findById (lib/db/repositories/company.repository.ts:69:21)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:527:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected substring: \"Database operation failed\"\nReceived message:   \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:86:18)\n      at CompanyRepository.findById (lib/db/repositories/company.repository.ts:69:21)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:527:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:528:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository Error Handling should handle database connection errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle database connection errors"},{"ancestorTitles":["CompanyRepository","Error Handling"],"duration":4,"failureDetails":[{"matcherResult":{"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:539:7)","pass":false},"message":"expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:539:7)"}],"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected constructor: ValidationError\nReceived constructor: DatabaseError\n\nReceived message: \"An unexpected database error occurred\"\n\n      474 |     }\n      475 |\n    > 476 |     return new DatabaseError(\n          |            ^\n      477 |       'An unexpected database error occurred',\n      478 |       'UNKNOWN',\n      479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:539:7)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/node_modules/expect/build/index.js:218:22)\n    at Object.toThrow (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts:540:18)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"CompanyRepository Error Handling should handle validation errors from validator","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle validation errors from validator"}],"endTime":1749418882530,"message":"  ● CompanyRepository › findByIdWithDetails › should get company with all related data\n\n    TypeError: repository.findByIdWithDetails is not a function\n\n      62 |       repository = new CompanyRepository(mockSupabase)\n      63 |\n    > 64 |       const result = await repository.findByIdWithDetails('company-1')\n         |                                       ^\n      65 |\n      66 |       expect(result).toBeTruthy()\n      67 |       expect(result?.id).toBe('company-1')\n\n      at Object.findByIdWithDetails (__tests__/lib/db/repositories/company.repository.test.ts:64:39)\n\n  ● CompanyRepository › findByIdWithDetails › should return null when company not found\n\n    TypeError: repository.findByIdWithDetails is not a function\n\n      81 |       repository = new CompanyRepository(mockSupabase)\n      82 |\n    > 83 |       const result = await repository.findByIdWithDetails('non-existent')\n         |                                       ^\n      84 |\n      85 |       expect(result).toBeNull()\n      86 |     })\n\n      at Object.findByIdWithDetails (__tests__/lib/db/repositories/company.repository.test.ts:83:39)\n\n  ● CompanyRepository › updateOnboarding › should update company onboarding data\n\n    TypeError: repository.updateOnboarding is not a function\n\n      107 |       repository = new CompanyRepository(mockSupabase)\n      108 |\n    > 109 |       const result = await repository.updateOnboarding('company-1', onboardingData)\n          |                                       ^\n      110 |\n      111 |       expect(result.naics_codes).toEqual(['339112', '339113'])\n      112 |       expect(result.certifications).toEqual(['ISO 9001', 'ISO 13485'])\n\n      at Object.updateOnboarding (__tests__/lib/db/repositories/company.repository.test.ts:109:39)\n\n  ● CompanyRepository › updateOnboarding › should validate NAICS codes\n\n    TypeError: repository.updateOnboarding is not a function\n\n      131 |       )\n      132 |\n    > 133 |       await expect(repository.updateOnboarding('company-1', invalidData))\n          |                               ^\n      134 |         .rejects.toThrow(ValidationError)\n      135 |     })\n      136 |   })\n\n      at Object.updateOnboarding (__tests__/lib/db/repositories/company.repository.test.ts:133:31)\n\n  ● CompanyRepository › addUser › should add user to company\n\n    TypeError: repository.addUser is not a function\n\n      160 |       repository = new CompanyRepository(mockSupabase)\n      161 |\n    > 162 |       const result = await repository.addUser('company-1', 'new-user-id', newProfile)\n          |                                       ^\n      163 |\n      164 |       expect(result.email).toBe('newuser@company.com')\n      165 |       expect(result.company_id).toBe('company-1')\n\n      at Object.addUser (__tests__/lib/db/repositories/company.repository.test.ts:162:39)\n\n  ● CompanyRepository › addUser › should handle user already exists error\n\n    TypeError: repository.addUser is not a function\n\n      183 |       repository = new CompanyRepository(mockSupabase)\n      184 |\n    > 185 |       await expect(repository.addUser('company-1', 'existing-user', {\n          |                               ^\n      186 |         email: 'existing@company.com',\n      187 |         full_name: 'Existing User',\n      188 |         role: 'member'\n\n      at Object.addUser (__tests__/lib/db/repositories/company.repository.test.ts:185:31)\n\n  ● CompanyRepository › removeUser › should remove user from company\n\n    TypeError: repository.removeUser is not a function\n\n      203 |       repository = new CompanyRepository(mockSupabase)\n      204 |\n    > 205 |       await repository.removeUser('company-1', 'user-2')\n          |                        ^\n      206 |\n      207 |       const query = mockSupabase.from.mock.results[0]?.value\n      208 |       expect(query.update).toHaveBeenCalledWith({ \n\n      at Object.removeUser (__tests__/lib/db/repositories/company.repository.test.ts:205:24)\n\n  ● CompanyRepository › removeUser › should not allow removing the last owner\n\n    TypeError: repository.removeUser is not a function\n\n      227 |       repository = new CompanyRepository(mockSupabase)\n      228 |\n    > 229 |       await expect(repository.removeUser('company-1', 'user-1'))\n          |                               ^\n      230 |         .rejects.toThrow('Cannot remove the last owner')\n      231 |     })\n      232 |   })\n\n      at Object.removeUser (__tests__/lib/db/repositories/company.repository.test.ts:229:31)\n\n  ● CompanyRepository › updateUserRole › should update user role\n\n    TypeError: repository.updateUserRole is not a function\n\n      244 |       repository = new CompanyRepository(mockSupabase)\n      245 |\n    > 246 |       const result = await repository.updateUserRole('company-1', 'user-2', 'admin')\n          |                                       ^\n      247 |\n      248 |       expect(result.role).toBe('admin')\n      249 |       \n\n      at Object.updateUserRole (__tests__/lib/db/repositories/company.repository.test.ts:246:39)\n\n  ● CompanyRepository › updateUserRole › should validate role transitions\n\n    TypeError: repository.updateUserRole is not a function\n\n      267 |       repository = new CompanyRepository(mockSupabase)\n      268 |\n    > 269 |       await expect(repository.updateUserRole('company-1', 'user-2', 'owner'))\n          |                               ^\n      270 |         .rejects.toThrow('Company already has an owner')\n      271 |     })\n      272 |   })\n\n      at Object.updateUserRole (__tests__/lib/db/repositories/company.repository.test.ts:269:31)\n\n  ● CompanyRepository › updateSubscription › should handle subscription not found\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected constructor: NotFoundError\n    Received constructor: DatabaseError\n\n    Received message: \"The result contains 0 rows\"\n\n          466 |           )\n          467 |         default:\n        > 468 |           return new DatabaseError(\n              |                  ^\n          469 |             error.message || 'Database operation failed',\n          470 |             error.code,\n          471 |             { operation, table: this.tableName, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:468:18)\n      at CompanyRepository.handleError [as update] (lib/db/repositories/base.repository.ts:238:18)\n      at CompanyRepository.updateSubscription (lib/db/repositories/company.repository.ts:242:23)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:308:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/company.repository.test.ts:310:19)\n\n  ● CompanyRepository › getStatistics › should calculate company statistics\n\n    TypeError: repository.getStatistics is not a function\n\n      362 |\n      363 |       repository = new CompanyRepository(mockSupabase)\n    > 364 |       const stats = await repository.getStatistics('company-1')\n          |                                      ^\n      365 |\n      366 |       expect(stats).toEqual({\n      367 |         totalUsers: 5,\n\n      at Object.getStatistics (__tests__/lib/db/repositories/company.repository.test.ts:364:38)\n\n  ● CompanyRepository › getStatistics › should calculate conversion rate correctly\n\n    TypeError: repository.getStatistics is not a function\n\n      399 |\n      400 |       repository = new CompanyRepository(mockSupabase)\n    > 401 |       const stats = await repository.getStatistics('company-1')\n          |                                      ^\n      402 |\n      403 |       expect(stats.submittedProposals).toBe(20)\n      404 |       expect(stats.wonProposals).toBe(8)\n\n      at Object.getStatistics (__tests__/lib/db/repositories/company.repository.test.ts:401:38)\n\n  ● CompanyRepository › findByStripeCustomerId › should find company by Stripe customer ID\n\n    TypeError: repository.findByStripeCustomerId is not a function\n\n      416 |       repository = new CompanyRepository(mockSupabase)\n      417 |\n    > 418 |       const result = await repository.findByStripeCustomerId('cus_test123')\n          |                                       ^\n      419 |\n      420 |       expect(result).toBeTruthy()\n      421 |       expect(result?.stripe_customer_id).toBe('cus_test123')\n\n      at Object.findByStripeCustomerId (__tests__/lib/db/repositories/company.repository.test.ts:418:39)\n\n  ● CompanyRepository › findByStripeCustomerId › should return null when not found\n\n    TypeError: repository.findByStripeCustomerId is not a function\n\n      433 |       repository = new CompanyRepository(mockSupabase)\n      434 |\n    > 435 |       const result = await repository.findByStripeCustomerId('cus_nonexistent')\n          |                                       ^\n      436 |\n      437 |       expect(result).toBeNull()\n      438 |     })\n\n      at Object.findByStripeCustomerId (__tests__/lib/db/repositories/company.repository.test.ts:435:39)\n\n  ● CompanyRepository › getActiveUsers › should get active users for company\n\n    TypeError: repository.getActiveUsers is not a function\n\n      450 |       repository = new CompanyRepository(mockSupabase)\n      451 |\n    > 452 |       const result = await repository.getActiveUsers('company-1')\n          |                                       ^\n      453 |\n      454 |       expect(result).toHaveLength(2)\n      455 |       expect(result[0].company_id).toBe('company-1')\n\n      at Object.getActiveUsers (__tests__/lib/db/repositories/company.repository.test.ts:452:39)\n\n  ● CompanyRepository › getActiveUsers › should filter by activity date\n\n    TypeError: repository.getActiveUsers is not a function\n\n      471 |       repository = new CompanyRepository(mockSupabase)\n      472 |\n    > 473 |       await repository.getActiveUsers('company-1', thirtyDaysAgo)\n          |                        ^\n      474 |\n      475 |       const query = mockSupabase.from.mock.results[0]?.value\n      476 |       expect(query.gte).toHaveBeenCalledWith(\n\n      at Object.getActiveUsers (__tests__/lib/db/repositories/company.repository.test.ts:473:24)\n\n  ● CompanyRepository › bulkUpdateCompanies › should update multiple companies\n\n    TypeError: repository.bulkUpdateCompanies is not a function\n\n      498 |       repository = new CompanyRepository(mockSupabase)\n      499 |\n    > 500 |       const result = await repository.bulkUpdateCompanies(companies as any)\n          |                                       ^\n      501 |\n      502 |       expect(result).toBe(50)\n      503 |       \n\n      at Object.bulkUpdateCompanies (__tests__/lib/db/repositories/company.repository.test.ts:500:39)\n\n  ● CompanyRepository › bulkUpdateCompanies › should handle empty array\n\n    TypeError: repository.bulkUpdateCompanies is not a function\n\n      510 |\n      511 |     it('should handle empty array', async () => {\n    > 512 |       const result = await repository.bulkUpdateCompanies([])\n          |                                       ^\n      513 |       expect(result).toBe(0)\n      514 |       expect(mockSupabase.from).not.toHaveBeenCalled()\n      515 |     })\n\n      at Object.bulkUpdateCompanies (__tests__/lib/db/repositories/company.repository.test.ts:512:39)\n\n  ● CompanyRepository › Error Handling › should handle database connection errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Database operation failed\"\n    Received message:   \"An unexpected database error occurred\"\n\n          474 |     }\n          475 |\n        > 476 |     return new DatabaseError(\n              |            ^\n          477 |       'An unexpected database error occurred',\n          478 |       'UNKNOWN',\n          479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:86:18)\n      at CompanyRepository.findById (lib/db/repositories/company.repository.ts:69:21)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:527:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/company.repository.test.ts:528:18)\n\n  ● CompanyRepository › Error Handling › should handle validation errors from validator\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected constructor: ValidationError\n    Received constructor: DatabaseError\n\n    Received message: \"An unexpected database error occurred\"\n\n          474 |     }\n          475 |\n        > 476 |     return new DatabaseError(\n              |            ^\n          477 |       'An unexpected database error occurred',\n          478 |       'UNKNOWN',\n          479 |       { operation, table: this.tableName, originalError: error, ...context }\n\n      at CompanyRepository.handleError (lib/db/repositories/base.repository.ts:476:12)\n      at CompanyRepository.handleError [as create] (lib/db/repositories/base.repository.ts:187:18)\n      at Object.<anonymous> (__tests__/lib/db/repositories/company.repository.test.ts:539:7)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at Object.toThrow (__tests__/lib/db/repositories/company.repository.test.ts:540:18)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/repositories/company.repository.test.ts","startTime":1749418881465,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should allow authenticated users with valid permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should allow authenticated users with valid permissions"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":56,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should deny access for unauthenticated users","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should deny access for unauthenticated users"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":426,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should check rate limits before permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check rate limits before permissions"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should enforce role-based permissions for company resources","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should enforce role-based permissions for company resources"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should allow admins to write company resources","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow admins to write company resources"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should restrict user-specific resources","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should restrict user-specific resources"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should handle proposal delete permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle proposal delete permissions"},{"ancestorTitles":["SecurityMiddleware","validatePermission"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware validatePermission should prevent subscription modifications","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should prevent subscription modifications"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":329,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should enforce read rate limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should enforce read rate limits"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should enforce write rate limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should enforce write rate limits"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should enforce analyze rate limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should enforce analyze rate limits"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should reset rate limits after window expires","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reset rate limits after window expires"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should track rate limits per user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track rate limits per user"},{"ancestorTitles":["SecurityMiddleware","Rate Limiting"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Rate Limiting should clear rate limits for a user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should clear rate limits for a user"},{"ancestorTitles":["SecurityMiddleware","Suspicious Activity Detection"],"duration":12,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 5\nReceived:    4","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 5\nReceived:    4\n    at Object.toBeGreaterThanOrEqual (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/middleware.test.ts:325:29)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"SecurityMiddleware Suspicious Activity Detection should detect SQL injection patterns","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect SQL injection patterns"},{"ancestorTitles":["SecurityMiddleware","Suspicious Activity Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Suspicious Activity Detection should detect dangerous SQL commands","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect dangerous SQL commands"},{"ancestorTitles":["SecurityMiddleware","Suspicious Activity Detection"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"action\": \"detected\", \"metadata\": {\"pattern\": \"(;|--|\\\\*|xp_|sp_)\", \"query\": \"SELECT * FROM opportunities WHERE agency = 'Department of Defense'\"}, \"resource\": \"query\", \"timestamp\": 2025-06-08T21:41:23.036Z, \"type\": \"suspicious_activity\", \"userId\": \"test-user-id\"}]","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"action\": \"detected\", \"metadata\": {\"pattern\": \"(;|--|\\\\*|xp_|sp_)\", \"query\": \"SELECT * FROM opportunities WHERE agency = 'Department of Defense'\"}, \"resource\": \"query\", \"timestamp\": 2025-06-08T21:41:23.036Z, \"type\": \"suspicious_activity\", \"userId\": \"test-user-id\"}]\n    at Object.toHaveLength (/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/middleware.test.ts:355:22)\n    at Promise.then.completed (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/home/locklearwyatt/projects/medcontracthub/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"SecurityMiddleware Suspicious Activity Detection should not flag legitimate queries","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not flag legitimate queries"},{"ancestorTitles":["SecurityMiddleware","Suspicious Activity Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Suspicious Activity Detection should truncate long queries in logs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should truncate long queries in logs"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should log all security events","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should log all security events"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should filter events by type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should filter events by type"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should filter events by user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should filter events by user"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should filter events by time","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should filter events by time"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":447,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should limit stored events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should limit stored events"},{"ancestorTitles":["SecurityMiddleware","Security Event Management"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Event Management should persist critical events to database","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should persist critical events to database"},{"ancestorTitles":["SecurityMiddleware","Security Report"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware Security Report should generate comprehensive security report","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should generate comprehensive security report"},{"ancestorTitles":["SecurityMiddleware","createContext"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware createContext should create context from authenticated user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create context from authenticated user"},{"ancestorTitles":["SecurityMiddleware","createContext"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware createContext should return null for unauthenticated user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for unauthenticated user"},{"ancestorTitles":["SecurityMiddleware","createContext"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SecurityMiddleware createContext should handle missing profile gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing profile gracefully"}],"endTime":1749418883559,"message":"  ● SecurityMiddleware › Suspicious Activity Detection › should detect SQL injection patterns\n\n    expect(received).toBeGreaterThanOrEqual(expected)\n\n    Expected: >= 5\n    Received:    4\n\n      323 |\n      324 |       const events = middleware.getSecurityEvents({ type: 'suspicious_activity' })\n    > 325 |       expect(events.length).toBeGreaterThanOrEqual(maliciousQueries.length)\n          |                             ^\n      326 |     })\n      327 |\n      328 |     it('should detect dangerous SQL commands', () => {\n\n      at Object.toBeGreaterThanOrEqual (__tests__/lib/db/security/middleware.test.ts:325:29)\n\n  ● SecurityMiddleware › Suspicious Activity Detection › should not flag legitimate queries\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 0\n    Received length: 1\n    Received array:  [{\"action\": \"detected\", \"metadata\": {\"pattern\": \"(;|--|\\\\*|xp_|sp_)\", \"query\": \"SELECT * FROM opportunities WHERE agency = 'Department of Defense'\"}, \"resource\": \"query\", \"timestamp\": 2025-06-08T21:41:23.036Z, \"type\": \"suspicious_activity\", \"userId\": \"test-user-id\"}]\n\n      353 |\n      354 |       const events = middleware.getSecurityEvents({ type: 'suspicious_activity' })\n    > 355 |       expect(events).toHaveLength(0)\n          |                      ^\n      356 |     })\n      357 |\n      358 |     it('should truncate long queries in logs', () => {\n\n      at Object.toHaveLength (__tests__/lib/db/security/middleware.test.ts:355:22)\n","name":"/home/locklearwyatt/projects/medcontracthub/__tests__/lib/db/security/middleware.test.ts","startTime":1749418881313,"status":"failed","summary":""}],"wasInterrupted":false}
