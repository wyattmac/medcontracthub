apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: observability
  labels:
    app: jaeger
    component: query
spec:
  type: NodePort
  ports:
  - port: 16686
    targetPort: 16686
    nodePort: 30686
    name: query
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: observability
  labels:
    app: jaeger
    component: collector
spec:
  ports:
  - port: 14268
    targetPort: 14268
    name: http
  - port: 14250
    targetPort: 14250
    name: grpc
  - port: 9411
    targetPort: 9411
    name: zipkin
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: observability
  labels:
    app: jaeger
    component: agent
spec:
  ports:
  - port: 5775
    targetPort: 5775
    protocol: UDP
    name: agent-zipkin-thrift
  - port: 6831
    targetPort: 6831
    protocol: UDP
    name: agent-jaeger-thrift
  - port: 6832
    targetPort: 6832
    protocol: UDP
    name: agent-jaeger-binary
  - port: 5778
    targetPort: 5778
    name: agent-configs
  clusterIP: None
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
    component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.49
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        - name: MEMORY_MAX_TRACES
          value: "10000"
        ports:
        - containerPort: 5775
          protocol: UDP
          name: zk-compact-trft
        - containerPort: 6831
          protocol: UDP
          name: jg-compact-trft
        - containerPort: 6832
          protocol: UDP
          name: jg-binary-trft
        - containerPort: 5778
          name: config-rest
        - containerPort: 16686
          name: query
        - containerPort: 14268
          name: collector-http
        - containerPort: 14250
          name: collector-grpc
        - containerPort: 9411
          name: zipkin
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 10
          periodSeconds: 5
---
# For production, use Jaeger Operator and configure with Elasticsearch backend
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-production-config
  namespace: observability
data:
  production-values.yaml: |
    # This would be used with Jaeger Operator for production setup
    apiVersion: jaegertracing.io/v1
    kind: Jaeger
    metadata:
      name: jaeger-production
    spec:
      strategy: production
      storage:
        type: elasticsearch
        options:
          es:
            server-urls: http://elasticsearch:9200
            index-prefix: jaeger
      ingress:
        enabled: true
      agent:
        strategy: DaemonSet
      collector:
        replicas: 3
        autoscale: true
        maxReplicas: 5
      query:
        replicas: 2