apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: medcontracthub
  labels:
    app: analytics-service
    version: v1
    component: microservice
    tier: analytics
spec:
  replicas: 3
  selector:
    matchLabels:
      app: analytics-service
      version: v1
  template:
    metadata:
      labels:
        app: analytics-service
        version: v1
        component: microservice
        tier: analytics
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: analytics-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: analytics-service
        image: localhost:5001/analytics-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8300
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: SERVICE_NAME
          value: "analytics-service"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: environment
        - name: PORT
          value: "8300"
        - name: METRICS_PORT
          value: "9090"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: log_level
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: postgres_host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: postgres_port
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: postgres_db
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: analytics-service-secrets
              key: postgres-password
        - name: CLICKHOUSE_HOST
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: clickhouse_host
        - name: CLICKHOUSE_PORT
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: clickhouse_port
        - name: CLICKHOUSE_DB
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: clickhouse_db
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: analytics-service-secrets
              key: clickhouse-password
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: redis_url
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: kafka_bootstrap_servers
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: kafka_consumer_group
        - name: KAFKA_TOPICS
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: kafka_topics
        - name: ANALYTICS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: analytics_config
        - name: PERFORMANCE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: performance_config
        - name: FEATURES
          valueFrom:
            configMapKeyRef:
              name: analytics-service-config
              key: features
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: analytics-cache
          mountPath: /cache
        - name: temp-storage
          mountPath: /tmp
      volumes:
      - name: analytics-cache
        emptyDir:
          sizeLimit: 2Gi
      - name: temp-storage
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - analytics-service
              topologyKey: kubernetes.io/hostname