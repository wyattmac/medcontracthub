apiVersion: v1
kind: Service
metadata:
  name: integration-adapter
  namespace: medcontracthub
  labels:
    app: integration-adapter
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 9090
    targetPort: 9090
    name: metrics
  selector:
    app: integration-adapter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integration-adapter
  namespace: medcontracthub
  labels:
    app: integration-adapter
spec:
  replicas: 2
  selector:
    matchLabels:
      app: integration-adapter
  template:
    metadata:
      labels:
        app: integration-adapter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: adapter
        image: localhost:5001/integration-adapter:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9090"
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: medcontracthub-config
              key: KAFKA_BROKERS
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: medcontracthub-config
              key: REDIS_URL
        - name: APP_SERVICE_URL
          value: "http://medcontracthub-app:3000"
        - name: OCR_SERVICE_URL
          value: "http://ocr-service:8100"
        - name: ENABLE_CIRCUIT_BREAKER
          value: "true"
        - name: CIRCUIT_BREAKER_TIMEOUT
          value: "5000"
        - name: CIRCUIT_BREAKER_THRESHOLD
          value: "5"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5