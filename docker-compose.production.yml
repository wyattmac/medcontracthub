# Production Environment Configuration  
# Port 3002 (app), 80/443 (nginx) - Optimized build, external database

services:
  nginx:
    image: nginx:alpine
    container_name: medcontract-prod-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - medcontract-network
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        NODE_ENV: production
    container_name: medcontract-prod-app
    ports:
      - "3002:3000"
    env_file:
      - .env.local
    environment:
      - NODE_OPTIONS=--max-old-space-size=8192
      - NEXT_TELEMETRY_DISABLED=1
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:7-alpine
    container_name: medcontract-prod-redis
    ports:
      - "6381:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_prod_data:/data
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: medcontract-prod-worker
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - medcontract-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

volumes:
  redis_prod_data:

networks:
  medcontract-network:
    driver: bridge