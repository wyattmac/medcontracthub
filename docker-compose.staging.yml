# Staging Environment Configuration
# Port 3001 - Production build, test data

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.staging
      args:
        NODE_ENV: staging
    container_name: medcontract-staging-app
    ports:
      - "3001:3000"
    env_file:
      - .env.local
    environment:
      - NODE_OPTIONS=--max-old-space-size=8192
      - NEXT_TELEMETRY_DISABLED=1
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/medcontracthub
      - NODE_ENV=staging
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: medcontract-staging-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medcontracthub
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./supabase/schema.sql:/docker-entrypoint-initdb.d/00-schema.sql
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medcontract-staging-redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_staging_data:/data
    networks:
      - medcontract-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: medcontract-staging-worker
    env_file:
      - .env.local
    environment:
      - NODE_ENV=staging
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    networks:
      - medcontract-network
    restart: unless-stopped

volumes:
  postgres_staging_data:
  redis_staging_data:

networks:
  medcontract-network:
    driver: bridge